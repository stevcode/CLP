<catel:UserControl x:Class="Classroom_Learning_Partner.Views.MajorRibbonView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:customControls="clr-namespace:CLP.CustomControls;assembly=CLP.CustomControls"
                   xmlns:viewModels="clr-namespace:Classroom_Learning_Partner.ViewModels"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters">

    <DockPanel Height="65"
               Background="{StaticResource GrayBackgroundColor}">

        <Line DockPanel.Dock="Bottom"
              Stretch="Fill"
              X1="0"
              X2="1"
              Margin="-1 0 -1 0"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1" />

        <!-- BackStage "Toggle" Button -->
        <Button DockPanel.Dock="Left"
                Height="64"
                Width="64"
                Command="{Binding ShowBackStageCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">

                                <ControlTemplate.Resources>

                                    <customControls:HLSColorValueConverter x:Key="ColorConverter" />

                                    <!-- Animation  Storyboards -->
                                    <Storyboard x:Key="PressedOn">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="PressedOff">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </ControlTemplate.Resources>

                                <!-- Control Layout -->
                                <Grid Name="LayoutGrid"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Background="Transparent">

                                    <!-- Button FX Displayed Behind Content -->
                                    <Grid x:Name="IsPressedGrid"
                                          Margin="0"
                                          Background="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                          Visibility="Hidden">
                                        <Rectangle x:Name="InnerShadow"
                                                   Margin="3,3,0,0"
                                                   Stroke="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.8'}"
                                                   Opacity="0.5" />
                                        <Rectangle x:Name="MiddleShadow"
                                                   Margin="2,2,0,0"
                                                   Stroke="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.75'}"
                                                   Opacity="0.5" />
                                        <Rectangle x:Name="OuterShadow"
                                                   Margin="1,1,0,0"
                                                   Stroke="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.7'}"
                                                   Opacity="0.5" />
                                        <Rectangle x:Name="BorderRect"
                                                   Margin="0"
                                                   Stroke="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.5'}" />
                                    </Grid>

                                    <Ellipse x:Name="ButtonMask"
                                             Fill="{DynamicResource DynamicMainColor}"
                                             Stroke="{StaticResource GrayEdgeColor}"
                                             StrokeThickness="3"
                                             Height="60"
                                             Width="60"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center" />

                                    <!-- Button Content -->
                                    <Image Source="pack://application:,,,/Resources/Images/CLPPaperClipMenuIconWhiteBorderless64.png" />
                                </Grid>

                                <!-- FX Triggers -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed"
                                             Value="True">
                                        <Trigger.ExitActions>
                                            <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOff}" />
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOn}" />
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <Line DockPanel.Dock="Left"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1" />

        <!-- Left Panel Control -->
        <StackPanel DockPanel.Dock="Left"
                    Orientation="Horizontal">

            <customControls:ToggleRibbonButton UnCheckedText="Show Pages"
                                               CheckedText="Hide Pages"
                                               LargeImageSource="pack://application:,,,/Resources/Images/OpenNotebook32.png"
                                               IsChecked="{Binding CurrentLeftPanel, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:Panels.NotebookPages}}"
                                               IsEnabled="{Binding MainWindow.Workspace, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}" />

            <customControls:ToggleRibbonButton UnCheckedText="Show Progress"
                                               CheckedText="Hide Progress"
                                               LargeImageSource="pack://application:,,,/Resources/Images/Clipboard32.png"
                                               IsChecked="{Binding CurrentLeftPanel, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:Panels.Progress}}"
                                               IsEnabled="{Binding MainWindow.Workspace, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}"
                                               Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}" />

            <customControls:ToggleRibbonButton UnCheckedText="Show Submissions"
                                               CheckedText="Hide Submissions"
                                               LargeImageSource="pack://application:,,,/Resources/Images/StagingPanel32.png"
                                               IsChecked="{Binding MainWindow.Workspace.StagingPanel.IsVisible}"
                                               IsEnabled="{Binding MainWindow.Workspace, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}"
                                               Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}" />

        </StackPanel>

        <Line DockPanel.Dock="Left"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1" />

        <!-- User and Network Controls -->
        <StackPanel DockPanel.Dock="Right"
                    Background="Transparent"
                    IsHitTestVisible="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseRightButtonUp">
                    <catel:EventToCommand Command="{Binding ReconnectCommand}"
                                          PassEventArgsToCommand="False" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TextBlock Text="{Binding MainWindowViewModel.CurrentUser.DisplayName, Source={x:Static Application.Current}}"
                       FontWeight="Bold"
                       FontSize="12"
                       Margin="5 2"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />

            <TextBlock Text="{Binding MainWindowViewModel.CurrentNotebookName, Source={x:Static Application.Current}}"
                       FontWeight="Bold"
                       FontSize="9"
                       Margin="5 2"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />

            <TextBlock Text="{Binding ConnectionStatus}"
                       FontSize="9"
                       Margin="5 2"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />

        </StackPanel>

        <Line DockPanel.Dock="Right"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1" />

        <!-- Extras -->
        <StackPanel DockPanel.Dock="Right"
                    Orientation="Horizontal"
                    Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}">

            <customControls:ToggleRibbonButton UnCheckedText="Pens Down"
                                               CheckedText="Pens Up"
                                               IsChecked="{Binding BlockStudentPenInput}"
                                               LargeImageSource="pack://application:,,,/Resources/Images/PenDisabled32.png" />

            <Line DockPanel.Dock="Right"
                  Stretch="Fill"
                  Y1="0"
                  Y2="1"
                  Margin="0 2 0 2"
                  Stroke="{DynamicResource DynamicMainColor}"
                  StrokeThickness="1" />

            <customControls:DropDownRibbonButton Text="Extras"
                                                 LargeImageSource="pack://application:,,,/Resources/Images/ExtrasFolder32.png">
                <customControls:DropDownRibbonButton.DropDown>
                    <ContextMenu>
                        <customControls:RibbonButton Text="Add New Page"
                                                     Command="{Binding AddNewPageCommand}"
                                                     LargeImageSource="pack://application:,,,/Resources/Images/NewNotebook32.png"
                                                     IsContextButton="True" />

                        <!--<customControls:RibbonButton Text="Add New Animation Page"
                                                     Command="{Binding AddNewAnimationPageCommand}"
                                                     LargeImageSource="pack://application:,,,/Resources/Images/NewNotebook32.png"
                                                     IsContextButton="True" />-->

                        <customControls:ToggleRibbonButton UnCheckedText="Show Analysis"
                                                           CheckedText="Hide Analysis"
                                                           IsChecked="{Binding MainWindowViewModel.MajorRibbon.CurrentRightPanel, Source={x:Static Application.Current}, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:Panels.PageInformation}}"
                                                           IsEnabled="{Binding MainWindowViewModel.Workspace, Source={x:Static Application.Current}, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}"
                                                           LargeImageSource="pack://application:,,,/Resources/Images/PageInformation32.png"
                                                           IsContextButton="True" />

                        <customControls:ToggleRibbonButton UnCheckedText="Show Page Replay"
                                                           CheckedText="Hide Page Replay"
                                                           LargeImageSource="pack://application:,,,/Resources/Images/AnimationIndicator32.png"
                                                           IsContextButton="True" />

                        <customControls:RibbonButton Text="Take Page Screenshot"
                                                     LargeImageSource="pack://application:,,,/Images/camera.png"
                                                     IsContextButton="True" />
                    </ContextMenu>
                </customControls:DropDownRibbonButton.DropDown>
            </customControls:DropDownRibbonButton>

        </StackPanel>

        <Line DockPanel.Dock="Right"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1"
              Visibility="{Binding MainWindowViewModel.NotStudentVisibility, Source={x:Static Application.Current}}" />

        <!-- Right Panel Control -->
        <StackPanel DockPanel.Dock="Right"
                    Orientation="Horizontal"
                    Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}">

            <customControls:RibbonButton Text="Exit Multi Display"
                                         Command="{Binding ExitMultiDisplayCommand}"
                                         LargeImageSource="pack://application:,,,/Resources/Images/Displays32.png" />

            <customControls:ToggleRibbonButton UnCheckedText="Show Displays"
                                               CheckedText="Hide Displays"
                                               LargeImageSource="pack://application:,,,/Resources/Images/Displays32.png"
                                               IsChecked="{Binding CurrentRightPanel, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:Panels.Displays}}"
                                               IsEnabled="{Binding MainWindow.Workspace, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}" />

            <customControls:ToggleRibbonButton UnCheckedText="Freeze"
                                               CheckedText="Unfreeze"
                                               LargeImageSource="pack://application:,,,/Resources/Images/Projector32.png"
                                               IsChecked="{Binding MainWindowViewModel.IsProjectorFrozen, Source={x:Static Application.Current}}"
                                               IsEnabled="{Binding MainWindow.Workspace, Converter={converters:TypeMatchToBooleanConverter}, ConverterParameter={x:Type viewModels:NotebookWorkspaceViewModel}}" />

        </StackPanel>

        <Line DockPanel.Dock="Right"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1"
              Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}" />

        <!-- Sharing -->
        <StackPanel DockPanel.Dock="Right"
                    Orientation="Horizontal"
                    Visibility="{Binding MainWindowViewModel.StudentOnlyVisibility, Source={x:Static Application.Current}}">

            <customControls:RibbonButton Text="Send To Teacher"
                                         Command="{Binding SubmitPageCommand}"
                                         LargeImageSource="pack://application:,,,/Resources/Images/SingleSubmit32.png" />

        </StackPanel>

        <Line DockPanel.Dock="Right"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1"
              Visibility="{Binding MainWindowViewModel.StudentOnlyVisibility, Source={x:Static Application.Current}}" />

        <!-- Page -->
        <StackPanel DockPanel.Dock="Right"
                    Orientation="Horizontal">

            <customControls:RibbonButton Text="Longer Page"
                                         Command="{Binding LongerPageCommand}"
                                         LargeImageSource="pack://application:,,,/Resources/Images/MakePageLonger32.png" />

            <customControls:RibbonButton Text="Undo"
                                         Visibility="Collapsed"
                                         Command="{Binding UndoCommand}"
                                         IsEnabled="False"
                                         LargeImageSource="pack://application:,,,/Resources/Images/Undo32.png" />

            <customControls:RibbonButton Text="Redo"
                                         Visibility="Collapsed"
                                         Command="{Binding RedoCommand}"
                                         IsEnabled="False"
                                         LargeImageSource="pack://application:,,,/Resources/Images/Redo32.png" />

        </StackPanel>

        <Line DockPanel.Dock="Right"
              Stretch="Fill"
              Y1="0"
              Y2="1"
              Margin="0 2 0 2"
              Stroke="{DynamicResource DynamicMainColor}"
              StrokeThickness="1" />

        <!-- Dynamic Tool Buttons -->
        <ScrollViewer x:Name="ScrollViewer"
                      VerticalScrollBarVisibility="Disabled"
                      HorizontalScrollBarVisibility="Hidden">
            <ItemsControl ItemsSource="{Binding Buttons}"
                          HorizontalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

            </ItemsControl>
        </ScrollViewer>

    </DockPanel>
</catel:UserControl>