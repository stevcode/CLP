<RibbonWindow x:Class="Classroom_Learning_Partner.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Views="clr-namespace:Classroom_Learning_Partner.Views"
        xmlns:conv="clr-namespace:Classroom_Learning_Partner.Resources"
        Icon="..\Images\InkWell.ico"
        Height="800"
        Width="1280"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        WindowState="Maximized"
        Closing="RibbonWindow_Closing"
        Title="{Binding Path=TitleBarText}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=SetInstructorCommand}"
              Gesture="CTRL+SHIFT+I" />
        <KeyBinding Command="{Binding Path=SetStudentCommand}"
              Gesture="CTRL+SHIFT+S" />
        <KeyBinding Command="{Binding Path=SetProjectorCommand}"
              Gesture="CTRL+SHIFT+P" />
        <KeyBinding Command="{Binding Path=SetServerCommand}"
              Gesture="CTRL+SHIFT+D" />
    </Window.InputBindings>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Views:RibbonView Grid.Row="0" DataContext="{Binding Ribbon}"/>

        <!-- Control that dynamically determines what Display to show -->
        <ContentControl Grid.Row="1" DataContext="{Binding SelectedWorkspace}">
            <ContentControl.Resources>

                <ControlTemplate x:Key="BlankWorkspaceTemplate">
                    <Views:BlankWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

                <ControlTemplate x:Key="NotebookChooserWorkspaceTemplate">
                    <Views:NotebookChooserWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

                <ControlTemplate x:Key="NotebookWorkspaceTemplate">
                    <Views:NotebookWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

                <ControlTemplate x:Key="ProjectorWorkspaceTemplate">
                    <Views:ProjectorWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

                <ControlTemplate x:Key="ServerWorkspaceTemplate">
                    <Views:ServerWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

                <ControlTemplate x:Key="UserLoginWorkspaceTemplate">
                    <Views:UserLoginWorkspaceView DataContext="{Binding }" />
                </ControlTemplate>

            </ContentControl.Resources>

            <ContentControl.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- BlankWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="BlankWorkspace">
                            <Setter Property="Template" Value="{StaticResource BlankWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- NotebookChooserWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="NotebookChooserWorkspace">
                            <Setter Property="Template" Value="{StaticResource NotebookChooserWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- NotebookWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="NotebookWorkspace">
                            <Setter Property="Template" Value="{StaticResource NotebookWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- ProjectorWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="ProjectorWorkspace">
                            <Setter Property="Template" Value="{StaticResource ProjectorWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- ServerWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="ServerWorkspace">
                            <Setter Property="Template" Value="{StaticResource ServerWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- UserLoginWorkspace trigger -->
                        <DataTrigger Binding="{Binding WorkspaceName}" Value="UserLoginWorkspace">
                            <Setter Property="Template" Value="{StaticResource UserLoginWorkspaceTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <StatusBar Grid.Row="2" VerticalAlignment="Bottom" Background="DarkViolet" Height="23">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource StatusBarText}" TargetType="{x:Type TextBlock}" />
            </StatusBar.Resources>
            <TextBlock>SLIDE 1 OF 1</TextBlock>
            <Separator />
            <TextBlock>CONNECTION STATUS:</TextBlock>
            <TextBlock Text="{Binding OnlineStatus}" />
            <Slider
                  x:Name="SliderFrom"
                  Width="200"
                  Height="50"
                  TickFrequency="10"
                  IsSnapToTickEnabled="False"
                  TickPlacement="None"
                  VerticalAlignment="Top"
                  Maximum="400" Minimum="10">
                <Slider.Style>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Slider}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TickBar x:Name="TopTick" Visibility="Hidden" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                                            <TickBar x:Name="BottomTick" Visibility="Hidden" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="2"/>
                                            <Border x:Name="TrackBackground"  
                                                     BorderThickness="1" CornerRadius="1"
                                                     Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                                <Canvas Margin="-6,-1">
                                                    <Rectangle Visibility="Visible" x:Name="PART_SelectionRange" Height="4.0"
                                                     Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                     Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                                     StrokeThickness="1.0"/>
                                                </Canvas>
                                            </Border>
                                            <Track x:Name="PART_Track" Grid.Row="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                                <Setter Property="IsTabStop" Value="false"/>
                                                                <Setter Property="Focusable" Value="false"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle HorizontalAlignment="Left" SnapsToDevicePixels="True" Fill="White" StrokeThickness="0" Height="2" Width="6"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                                <Setter Property="IsTabStop" Value="false"/>
                                                                <Setter Property="Focusable" Value="false"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Grid HorizontalAlignment="Right">
                                                                                <Rectangle SnapsToDevicePixels="True" Fill="White" StrokeThickness="0" Height="2" Width="8"/>
                                                                                <Rectangle SnapsToDevicePixels="True" Fill="White" StrokeThickness="0" Height="8" Width="2"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb" Background="Black">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Rectangle SnapsToDevicePixels="True" Fill="White" StrokeThickness="0" Height="10" Width="3"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Slider.Style>
            </Slider>
        </StatusBar>

    </Grid>
</RibbonWindow>
