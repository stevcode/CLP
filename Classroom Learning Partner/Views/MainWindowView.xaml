<catel:DataWindow x:Class="Classroom_Learning_Partner.Views.MainWindowView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:catel="http://catel.codeplex.com"
                  xmlns:views="clr-namespace:Classroom_Learning_Partner.Views"
                  xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters"
                  xmlns:viewModels="clr-namespace:Classroom_Learning_Partner.ViewModels"
                  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  xmlns:customControls="clr-namespace:CLP.CustomControls;assembly=CLP.CustomControls"
                  Loaded="MainWindowView_OnLoaded"
                  Closing="MainWindowView_OnClosing"
                  Icon="pack://application:,,,/Resources/Images/Icons/CLPPaperClipLogoBlack.ico"
                  Height="800"
                  Width="1280"
                  Title="{Binding TitleBarText}"
                  WindowStyle="None"
                  ShowInTaskbar="True"
                  ResizeMode="CanResize"
                  SizeToContent="Manual"
                  WindowStartupLocation="CenterScreen"
                  WindowState="Maximized"
                  MinWidth="300"
                  MinHeight="300">
    
    <!--Debugging WindowState:
        Release: Maximized
        Debug: Normal-->

    <catel:DataWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />
            <conv:TypeToStringConverter x:Key="TypeToStringConverter" />
            <conv:EnumToBoolConverter x:Key="EnumToBoolConverter" />
            <customControls:HLSColorValueConverter x:Key="ColorConverter" />
        </ResourceDictionary>
    </catel:DataWindow.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding SetUserModeCommand}"
                    CommandParameter="TEACHER"
                    Gesture="CTRL+SHIFT+T" />
        <KeyBinding Command="{Binding SetUserModeCommand}"
                    CommandParameter="STUDENT"
                    Gesture="CTRL+SHIFT+S" />
        <KeyBinding Command="{Binding SetUserModeCommand}"
                    CommandParameter="PROJECTOR"
                    Gesture="CTRL+SHIFT+P" />
        <KeyBinding Command="{Binding TogglePenDownCommand}"
                    Gesture="CTRL+SHIFT+D" />
        <KeyBinding Command="{Binding ToggleMaximizeStateCommand}"
                    Gesture="CTRL+M" />
    </Window.InputBindings>

    <!-- Grid Margin of -6 necessary to override DataWindow's default stylings -->
    <Grid Margin="-6">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- TitleBar -->
        <DockPanel Background="{StaticResource GrayEdgeColor}"
                   LastChildFill="True"
                   Height="24"
                   Visibility="{Binding IsDragBarVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">

            <!-- Program Close Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ExitProgramCommand}"
                    Width="44"
                    Height="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="SnapsToDevicePixels"
                                Value="true" />
                        <Setter Property="OverridesDefaultStyle"
                                Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">

                                    <ControlTemplate.Resources>

                                        <!-- Animation  Storyboards -->
                                        <Storyboard x:Key="PressedOn">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="PressedOff">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </ControlTemplate.Resources>

                                    <!-- Control Layout -->
                                    <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Red">

                                        <!-- Button FX Displayed Behind Content -->
                                        <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Background, ElementName=LayoutGrid, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                   StrokeThickness="0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Visibility="Hidden" />

                                        <!-- Button Content -->
                                        <Image Source="pack://application:,,,/Resources/Images/WindowControls/CloseButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                                    </Grid>

                                    <!-- FX Triggers -->
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed"
                                                 Value="True">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                            </Trigger.EnterActions>
                                        </Trigger>

                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </Button.Style>
            </Button>

            <!-- Program Maximize Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ToggleMaximizeStateCommand}"
                    Width="24"
                    Height="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="SnapsToDevicePixels"
                                Value="true" />
                        <Setter Property="OverridesDefaultStyle"
                                Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">

                                    <ControlTemplate.Resources>

                                        <!-- Animation  Storyboards -->
                                        <Storyboard x:Key="PressedOn">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="PressedOff">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </ControlTemplate.Resources>

                                    <!-- Control Layout -->
                                    <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Transparent">

                                        <Rectangle x:Name="ColorMask"
                                                   Fill="{DynamicResource DynamicMainColor}"
                                                   Visibility="Collapsed" />

                                        <!-- Button FX Displayed Behind Content -->
                                        <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Fill, ElementName=ColorMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                   StrokeThickness="0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Visibility="Hidden" />

                                        <!-- Button Content -->
                                        <Image Source="pack://application:,,,/Resources/Images/WindowControls/MaximizeButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                                    </Grid>

                                    <!-- FX Triggers -->
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed"
                                                 Value="True">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                            </Trigger.EnterActions>
                                        </Trigger>

                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </Button.Style>
            </Button>

            <!-- Program Minimize Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ToggleMinimizeStateCommand}"
                    Width="24"
                    Height="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="SnapsToDevicePixels"
                                Value="true" />
                        <Setter Property="OverridesDefaultStyle"
                                Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">

                                    <ControlTemplate.Resources>

                                        <!-- Animation  Storyboards -->
                                        <Storyboard x:Key="PressedOn">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="PressedOff">
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </ControlTemplate.Resources>

                                    <!-- Control Layout -->
                                    <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Transparent">

                                        <Rectangle x:Name="ColorMask"
                                                   Fill="{DynamicResource DynamicMainColor}"
                                                   Visibility="Collapsed" />

                                        <!-- Button FX Displayed Behind Content -->
                                        <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Fill, ElementName=ColorMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                   StrokeThickness="0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Visibility="Hidden" />

                                        <!-- Button Content -->
                                        <Image Source="pack://application:,,,/Resources/Images/WindowControls/MinimizeButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                                    </Grid>

                                    <!-- FX Triggers -->
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed"
                                                 Value="True">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                            </Trigger.EnterActions>
                                        </Trigger>

                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </Button.Style>
            </Button>

            <Grid Background="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseMove">
                        <catel:EventToCommand Command="{Binding MoveWindowCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TextBlock Text="Classroom Learning Partner"
                           TextAlignment="Center"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontFamily="Segoe UI"
                           FontSize="14"
                           Foreground="Black"
                           TextOptions.TextRenderingMode="Auto"
                           TextOptions.TextFormattingMode="Ideal" />
            </Grid>

        </DockPanel>

        <views:MajorRibbonView Grid.Row="1" 
                               DataContext="{Binding MajorRibbon}" />

        <!-- Control that dynamically determines what Workspace to show -->
        <ContentControl Grid.Row="2">
            <ContentControl.Resources>

                <ControlTemplate x:Key="BlankWorkspaceTemplate">
                    <views:BlankWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

                <ControlTemplate x:Key="NotebookWorkspaceTemplate">
                    <views:NotebookWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

                <ControlTemplate x:Key="UserLoginWorkspaceTemplate">
                    <views:UserLoginWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

            </ContentControl.Resources>

            <ContentControl.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- BlankWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="BlankWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource BlankWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- NotebookWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NotebookWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- UserLoginWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="UserLoginWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource UserLoginWorkspaceTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <Grid Grid.Row="2"
              Background="{StaticResource GrayBackgroundColor}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainWindowViewModel.CurrentProgramMode, Source={x:Static Application.Current}, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:ProgramModes.Projector}}"
                                           Value="True" />
                                <Condition Binding="{Binding MainWindowViewModel.IsProjectorFrozen, Source={x:Static Application.Current}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Image Source="{Binding FrozenDisplayImageSource}" />
            <TextBlock Text="Frozen"
                       Foreground="Red"
                       FontWeight="Bold"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Center"
                       FontSize="28" />
        </Grid>
        
        <views:BackStageView Grid.Row="1"
                             Grid.RowSpan="2"
                             DataContext="{Binding BackStage}"
                             Visibility="{Binding MainWindowViewModel.IsBackStageVisible, Source={x:Static Application.Current}, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}" />     

        <Grid Grid.Row="1"
              Grid.RowSpan="2"
              Background="Gray"
              Opacity="0.9"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsConvertingToPDF, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Border BorderBrush="White"
                    BorderThickness="7"
                    CornerRadius="7"
                    Background="Black"
                    Opacity="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Margin="0 50">
                <TextBlock FontSize="40"
                           FontWeight="Bold"
                           Foreground="White"
                           Margin="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <Run Text="Converting Following Page To PDF: " />
                    <Run Text="{Binding CurrentConvertingPage.PageNumber}" />
                </TextBlock>
            </Border>

            <Grid HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Height="500"
                  Width="500">

                <views:NonAsyncPagePreviewView DataContext="{Binding CurrentConvertingPage}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />

            </Grid>

        </Grid>

        <Grid Grid.Row="1"
              Grid.RowSpan="2"
              Background="Gray"
              Opacity="0.9"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsPenDownActivated, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Border BorderBrush="White"
                    BorderThickness="7"
                    CornerRadius="7"
                    Background="Black"
                    Opacity="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <TextBlock FontSize="40"
                           FontWeight="Bold"
                           Foreground="White"
                           Margin="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    Pens Down
                </TextBlock>
            </Border>
        </Grid>

    </Grid>
</catel:DataWindow>