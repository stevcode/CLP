<RibbonWindow x:Class="Classroom_Learning_Partner.Views.MainWindowView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:catel="http://catel.codeplex.com"
              xmlns:views="clr-namespace:Classroom_Learning_Partner.Views"
              xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters"
              xmlns:clp="clr-namespace:Classroom_Learning_Partner"
              UseLayoutRounding="True"
              SnapsToDevicePixels="True"
              Icon="..\Images\InkWell.ico"
              Height="800"
              Width="1280"
              WindowStartupLocation="CenterScreen"
              WindowStyle="None"
              WindowState="Maximized"
              Title="{Binding TitleBarText}"
              Closing="RibbonWindow_Closing">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />
            <conv:TypeToStringConverter x:Key="TypeToStringConverter" />
            <conv:EnumToBoolConverter x:Key="EnumToBoolConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <!--<KeyBinding Command="{Binding SetUserModeCommand}"
                    Gesture="CTRL+SHIFT+I" />
        <KeyBinding Command="{Binding SetUserModeCommand}"
                    Gesture="CTRL+SHIFT+S" />
        <KeyBinding Command="{Binding SetUserModeCommand}"
                    Gesture="CTRL+SHIFT+P" />-->
        <KeyBinding Command="{Binding ToggleDebugCommand}"
                    Gesture="CTRL+SHIFT+K" />
        <KeyBinding Command="{Binding ToggleExtrasCommand}"
                    Gesture="CTRL+SHIFT+E" />
        <KeyBinding Command="{Binding TogglePenDownCommand}"
                    Gesture="CTRL+SHIFT+D" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <views:RibbonView Grid.Row="0"
                          DataContext="{Binding Ribbon}" />
        
        <views:NonAsyncPagePreviewView Grid.Row="1" />

        <!-- Control that dynamically determines what Workspace to show -->
        <ContentControl Grid.Row="1">
            <ContentControl.Resources>

                <ControlTemplate x:Key="BlankWorkspaceTemplate">
                    <views:BlankWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

                <ControlTemplate x:Key="NotebookChooserWorkspaceTemplate">
                    <views:NotebookChooserWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

                <ControlTemplate x:Key="NotebookWorkspaceTemplate">
                    <views:NotebookWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

                <ControlTemplate x:Key="UserLoginWorkspaceTemplate">
                    <views:UserLoginWorkspaceView DataContext="{Binding Workspace}" />
                </ControlTemplate>

            </ContentControl.Resources>

            <ContentControl.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- BlankWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="BlankWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource BlankWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- NotebookChooserWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NotebookChooserWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookChooserWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- NotebookWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NotebookWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookWorkspaceTemplate}" />
                        </DataTrigger>

                        <!-- UserLoginWorkspace trigger -->
                        <DataTrigger Binding="{Binding Workspace, Converter={StaticResource TypeToStringConverter}}"
                                     Value="UserLoginWorkspaceViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource UserLoginWorkspaceTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
        
        <Grid Grid.Row="1"
              Background="{StaticResource GrayBackgroundColor}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CurrentUserMode, Source={x:Static Application.Current}, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static clp:App+UserMode.Projector}}"
                                            Value="True" />
                                <Condition Binding="{Binding MainWindowViewModel.Ribbon.IsProjectorFrozen, Source={x:Static Application.Current}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            
            <Image Source="{Binding FrozenDisplayImageSource}" />
            <TextBlock Text="Frozen"
                       Foreground="Red"
                       FontWeight="Bold"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Center"
                       FontSize="28" />
        </Grid>

        <StatusBar Grid.Row="2"
                   VerticalAlignment="Bottom"
                   Background="{StaticResource MainColor}"
                   Height="23"
                   Padding="0"
                   Margin="0"
                   BorderThickness="0">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource StatusBarText}"
                       TargetType="{x:Type TextBlock}" />
            </StatusBar.Resources>

            <StatusBarItem>
                <TextBlock>
                    <Run Text="Notebook Name: " />
                    <Run Text="{Binding CurrentNotebookName}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock>
                    <Run Text="Last Saved: " />
                    <Run Text="{Binding LastSavedTime}" />
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock>
                    <Run Text="CONNECTION STATUS: " />
                    <Run Text="{Binding OnlineStatus}" />
                </TextBlock>
            </StatusBarItem>

        </StatusBar>
        
        <Grid Grid.Row="0"
              Grid.RowSpan="3"
              Background="Gray"
              Opacity="0.5"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsConvertingToPDF, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Border BorderBrush="White"
                    BorderThickness="7"
                    CornerRadius="7"
                    Background="Black"
                    Opacity="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Margin="0 50">
                <TextBlock FontSize="40"
                           FontWeight="Bold"
                           Foreground="White"
                           Margin="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <Run Text="Converting Following Page To PDF: " />
                    <Run Text="{Binding CurrentConvertingPage.PageNumber}" />
                </TextBlock>
            </Border>
            
            <Grid HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Height="500"
                  Width="500">
                
                <views:NonAsyncPagePreviewView DataContext="{Binding CurrentConvertingPage}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                
            </Grid>
            
        </Grid>

        <Grid Grid.Row="0"
              Grid.RowSpan="3"
              Background="Gray"
              Opacity="0.5"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsPenDownActivated, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Border BorderBrush="White"
                    BorderThickness="7"
                    CornerRadius="7"
                    Background="Black"
                    Opacity="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <TextBlock FontSize="40"
                           FontWeight="Bold"
                           Foreground="White"
                           Margin="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    Pens Down
                </TextBlock>
            </Border>
        </Grid>

    </Grid>
</RibbonWindow>