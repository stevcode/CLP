<catel:UserControl x:Class="Classroom_Learning_Partner.Views.NotebookWorkspaceView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views"
                   xmlns:customControls="clr-namespace:CLP.CustomControls;assembly=CLP.CustomControls">

    <DockPanel Background="{Binding WorkspaceBackgroundColor}"
               LastChildFill="True">
        
        <!-- Context Ribbon -->
        <DockPanel DockPanel.Dock="Top"
                   Height="35"
                   LastChildFill="True"
                   HorizontalAlignment="Stretch"
                   Background="{StaticResource GrayBackgroundColor}">

            <Line DockPanel.Dock="Bottom"
                  Stretch="Fill"
                  X1="0"
                  X2="1"
                  Margin="-1 0 -1 0"
                  Stroke="{DynamicResource DynamicMainColor}"
                  StrokeThickness="1" />

            <Grid DockPanel.Dock="Left"
                        Width="250">
                
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center">

                    <customControls:RibbonButton Text="Previous Page"
                                                 Command="{Binding PreviousPageCommand}"
                                                 LargeImageSource="pack://application:,,,/Resources/Images/PreviousPage32.png"
                                                 IsContextButton="True" />

                    <customControls:RibbonButton Text="Next Page"
                                                 Command="{Binding NextPageCommand}"
                                                 LargeImageSource="pack://application:,,,/Resources/Images/NextPage32.png"
                                                 IsContextButton="True" />

                </StackPanel>
                
            </Grid>

            <Line DockPanel.Dock="Left"
                  Stretch="Fill"
                  Y1="0"
                  Y2="1"
                  Margin="0 2 0 2"
                  Stroke="{DynamicResource DynamicMainColor}"
                  StrokeThickness="1" />

            <customControls:RibbonButton DockPanel.Dock="Left"
                                         Text="Go To Page"
                                         Command="{Binding GoToPageCommand}"
                                         LargeImageSource="pack://application:,,,/Resources/Images/BlankPage64.png"
                                         IsContextButton="True" />

            <!--<customControls:RibbonButton DockPanel.Dock="Right"
                                         Text="Reset Demo"
                                         Command="{Binding ResetDemoCommand}"
                                         LargeImageSource="pack://application:,,,/Images/LargeIcon.png"
                                         IsContextButton="True" />-->

            <views:ContextRibbonView DataContext="{Binding ContextRibbon}" />
            
        </DockPanel>

        <!--Left Panel-->
        <Control DockPanel.Dock="Left">
            <Control.Resources>

                <ControlTemplate x:Key="NotebookPagesPanelTemplate">
                    <views:NotebookPagesPanelView DataContext="{Binding NotebookPagesPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="ProgressPanelTemplate">
                    <views:ProgressPanelView DataContext="{Binding ProgressPanel}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--NotebookPagesPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={converters:TypeToStringConverter}}"
                                     Value="NotebookPagesPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookPagesPanelTemplate}" />
                        </DataTrigger>

                        <!--ProgressPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={converters:TypeToStringConverter}}"
                                     Value="ProgressPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource ProgressPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <views:AuthoringPanelView DockPanel.Dock="Right"
                                  Visibility="{Binding MainWindowViewModel.IsAuthoring, Source={x:Static Application.Current}, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}"/>
        
        <!--Right Panel-->
        <Control DockPanel.Dock="Right"
                 Visibility="{Binding RightPanel.IsVisible, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="WebcamPanelTemplate">
                    <views:WebcamPanelView DataContext="{Binding RightPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="DisplaysPanelTemplate">
                    <views:DisplaysPanelView DataContext="{Binding DisplaysPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="PageInformationPanelTemplate">
                    <views:PageInformationPanelView DataContext="{Binding PageInformationPanel}" />
                </ControlTemplate>
                
            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--WebcamPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={converters:TypeToStringConverter}}"
                                     Value="WebcamPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource WebcamPanelTemplate}" />
                        </DataTrigger>

                        <!--DisplaysPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={converters:TypeToStringConverter}}"
                                     Value="DisplaysPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource DisplaysPanelTemplate}" />
                        </DataTrigger>
                        
                        <!--PageInformationPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={converters:TypeToStringConverter}}"
                                     Value="PageInformationPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource PageInformationPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!-- Animation Control Ribbon -->
        <DockPanel DockPanel.Dock="Top"
                   Height="69"
                   LastChildFill="True"
                   HorizontalAlignment="Stretch"
                   Background="{StaticResource GrayBackgroundColor}"
                   Visibility="{Binding AnimationControlRibbon.IsVisible, Converter={catel:BooleanToCollapsingVisibilityConverter}}">

            <Line DockPanel.Dock="Bottom"
                  Stretch="Fill"
                  X1="0"
                  X2="1"
                  Margin="-1 0 -1 0"
                  Stroke="{DynamicResource DynamicMainColor}"
                  StrokeThickness="1" />

            <views:AnimationControlRibbonView DataContext="{Binding AnimationControlRibbon}" />

        </DockPanel>

        <!-- Control that dynamically determines what Display to show -->
        <Control HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">

            <Control.Resources>

                <ControlTemplate x:Key="SingleDisplayTemplate">
                    <views:SingleDisplayView DataContext="{Binding SingleDisplay}" />
                </ControlTemplate>

                <ControlTemplate x:Key="GridDisplayTemplate">
                    <views:GridDisplayView DataContext="{Binding CurrentDisplay}" />
                </ControlTemplate>

                <ControlTemplate x:Key="ColumnDisplayTemplate">
                    <views:ColumnDisplayView DataContext="{Binding CurrentDisplay}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">

                    <Style.Triggers>

                        <!-- SingleDisplay triggers -->
                        <DataTrigger Binding="{Binding SingleDisplay, Converter={converters:IsNullConverter}}" Value="false">
                            <Setter Property="Template" Value="{StaticResource SingleDisplayTemplate}" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding CurrentDisplay, Converter={converters:IsNullConverter}}" Value="true">
                            <Setter Property="Template" Value="{StaticResource SingleDisplayTemplate}" />
                        </DataTrigger>

                        <!-- GridDisplay trigger -->
                        <DataTrigger Binding="{Binding CurrentDisplay, Converter={converters:TypeToStringConverter}}"
                                     Value="GridDisplay">
                            <Setter Property="Template"
                                    Value="{StaticResource GridDisplayTemplate}" />
                        </DataTrigger>

                        <!-- ColumnDisplay trigger -->
                        <DataTrigger Binding="{Binding CurrentDisplay, Converter={converters:TypeToStringConverter}}"
                                     Value="ColumnDisplay">
                            <Setter Property="Template"
                                    Value="{StaticResource ColumnDisplayTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

    </DockPanel>

</catel:UserControl>