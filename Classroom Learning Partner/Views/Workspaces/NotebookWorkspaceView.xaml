<catel:UserControl x:Class="Classroom_Learning_Partner.Views.NotebookWorkspaceView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter"/>
            <catel:IntToStringConverter x:Key="IntToString" />
            <conv:TypeToStringConverter x:Key="TypeToStringConverter" />
            <conv:ProjectedDisplayBackgroundConverter x:Key="BackgroundConverter" />     

        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Background="{Binding WorkspaceBackgroundColor}" LastChildFill="True">

        <!--Left Panel-->
        <Control DockPanel.Dock="Left"
                 Visibility="{Binding LeftPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="NotebookPagesPanelTemplate">
                    <views:NotebookPagesPanelView DataContext="{Binding LeftPanel}" />
                </ControlTemplate>
                <ControlTemplate x:Key="StudentWorkPanelTemplate">
                    <views:StudentWorkPanelView DataContext="{Binding LeftPanel}" />
                </ControlTemplate>
                <ControlTemplate x:Key="ProgressPanelTemplate">
                    <views:ProgressPanelView DataContext="{Binding LeftPanel}" />
                </ControlTemplate>
                

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--NotebookPagesPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}" Value="NotebookPagesPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource NotebookPagesPanelTemplate}" />
                        </DataTrigger>

                        <!--StudentWorkPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}" Value="StudentWorkPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource StudentWorkPanelTemplate}" />
                        </DataTrigger>
                        
                        <!--ProgressPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}" Value="ProgressPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource ProgressPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!--Right Panel-->
        <Control DockPanel.Dock="Right"
                 Visibility="{Binding RightPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="WebcamPanelTemplate">
                    <views:WebcamPanelView DataContext="{Binding RightPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="DisplayListPanelTemplate">
                    <views:DisplayListPanelView DataContext="{Binding RightPanel}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--WebcamPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={StaticResource TypeToStringConverter}}" Value="WebcamPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource WebcamPanelTemplate}" />
                        </DataTrigger>

                        <!--DisplayListPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={StaticResource TypeToStringConverter}}" Value="DisplayListPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource DisplayListPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!--Bottom Panel-->
        <Control DockPanel.Dock="Bottom"
                 Visibility="{Binding BottomPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="SubmissionHistoryPanelTemplate">
                    <views:SubmissionHistoryPanelView DataContext="{Binding BottomPanel}"
                                                      Visibility="{Binding MainWindowViewModel.Ribbon.StudentVisibility, Source={x:Static Application.Current}}"/>
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--SubmissionHistoryPanel trigger-->
                        <DataTrigger Binding="{Binding BottomPanel, Converter={StaticResource TypeToStringConverter}}" Value="SubmissionHistoryPanelViewModel">
                            <Setter Property="Template" Value="{StaticResource SubmissionHistoryPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!-- Control that dynamically determines what Display to show -->
        <Control HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <Control.Resources>

                <ControlTemplate x:Key="MirrorDisplayTemplate">
                    <views:MirrorDisplayView DataContext="{Binding SelectedDisplay}"/>
                </ControlTemplate>

                <ControlTemplate x:Key="GridDisplayTemplate">
                    <views:GridDisplayView DataContext="{Binding SelectedDisplay}"/>
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- MirrorDisplay trigger -->
                        <DataTrigger Binding="{Binding SelectedDisplay, Converter={StaticResource TypeToStringConverter}}" Value="CLPMirrorDisplay">
                            <Setter Property="Template" Value="{StaticResource MirrorDisplayTemplate}" />
                        </DataTrigger>

                        <!-- GridDisplay trigger -->
                        <DataTrigger Binding="{Binding SelectedDisplay, Converter={StaticResource TypeToStringConverter}}" Value="CLPGridDisplay">
                            <Setter Property="Template" Value="{StaticResource GridDisplayTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

    </DockPanel>

</catel:UserControl>