<catel:UserControl x:Class="Classroom_Learning_Partner.Views.NotebookWorkspaceView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views">

    <UserControl.Resources>
        <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />
        <conv:TypeToStringConverter x:Key="TypeToStringConverter" />
        <conv:IsNullConverter x:Key="IsNullConverter" />
    </UserControl.Resources>

    <DockPanel Background="{Binding WorkspaceBackgroundColor}"
               LastChildFill="True">

        <!--Left Panel-->
        <Control DockPanel.Dock="Left"
                 Visibility="{Binding LeftPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="NotebookPagesPanelTemplate">
                    <views:NotebookPagesPanelView DataContext="{Binding NotebookPagesPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="StudentWorkPanelTemplate">
                    <views:StudentWorkPanelView DataContext="{Binding StudentWorkPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="ProgressPanelTemplate">
                    <views:ProgressPanelView DataContext="{Binding ProgressPanel}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--NotebookPagesPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NotebookPagesPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookPagesPanelTemplate}" />
                        </DataTrigger>

                        <!--StudentWorkPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="StudentWorkPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource StudentWorkPanelTemplate}" />
                        </DataTrigger>

                        <!--ProgressPanel trigger-->
                        <DataTrigger Binding="{Binding LeftPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="ProgressPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource ProgressPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!--Right Panel-->
        <Control DockPanel.Dock="Right"
                 Visibility="{Binding RightPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="WebcamPanelTemplate">
                    <views:WebcamPanelView DataContext="{Binding RightPanel}" />
                </ControlTemplate>

                <ControlTemplate x:Key="DisplayListPanelTemplate">
                    <views:DisplaysPanelView DataContext="{Binding DisplaysPanel}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--WebcamPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="WebcamPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource WebcamPanelTemplate}" />
                        </DataTrigger>

                        <!--DisplayListPanel trigger-->
                        <DataTrigger Binding="{Binding RightPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="DisplaysPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource DisplayListPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!--Bottom Panel-->
        <Control DockPanel.Dock="Bottom"
                 Visibility="{Binding BottomPanel.IsVisible, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}">
            <Control.Resources>

                <ControlTemplate x:Key="SubmissionHistoryPanelTemplate">
                    <views:SubmissionHistoryPanelView DataContext="{Binding BottomPanel}"
                                                      Visibility="{Binding MainWindowViewModel.Ribbon.StudentVisibility, Source={x:Static Application.Current}}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!--SubmissionHistoryPanel trigger-->
                        <DataTrigger Binding="{Binding BottomPanel, Converter={StaticResource TypeToStringConverter}}"
                                     Value="SubmissionHistoryPanelViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource SubmissionHistoryPanelTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

        <!-- Control that dynamically determines what Display to show -->
        <Control HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">

            <Control.Resources>

                <ControlTemplate x:Key="SingleDisplayTemplate">
                    <views:SingleDisplayView DataContext="{Binding SingleDisplay}" />
                </ControlTemplate>

                <ControlTemplate x:Key="GridDisplayTemplate">
                    <views:GridDisplayView DataContext="{Binding CurrentDisplay}" />
                </ControlTemplate>

            </Control.Resources>

            <Control.Style>
                <Style TargetType="{x:Type Control}">

                    <Style.Triggers>

                        <!-- SingleDisplay triggers -->
                        <DataTrigger Binding="{Binding SingleDisplay, Converter={StaticResource IsNullConverter}}" Value="false">
                            <Setter Property="Template" Value="{StaticResource SingleDisplayTemplate}" />
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding CurrentDisplay, Converter={StaticResource IsNullConverter}}" Value="true">
                            <Setter Property="Template" Value="{StaticResource SingleDisplayTemplate}" />
                        </DataTrigger>

                        <!-- GridDisplay trigger -->
                        <DataTrigger Binding="{Binding CurrentDisplay, Converter={StaticResource TypeToStringConverter}}"
                                     Value="GridDisplay">
                            <Setter Property="Template"
                                    Value="{StaticResource GridDisplayTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Control.Style>
        </Control>

    </DockPanel>

</catel:UserControl>