<catel:UserControl x:Class="Classroom_Learning_Partner.Views.BackStageView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:customControls="clr-namespace:CLP.CustomControls;assembly=CLP.CustomControls"
                   xmlns:viewModels="clr-namespace:Classroom_Learning_Partner.ViewModels"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views">

    <catel:UserControl.Resources>
        <catel:BooleanToOppositeBooleanConverter x:Key="BooleanToOppositeBooleanConverter" />
        <converters:EnumToBoolConverter x:Key="EnumToBoolConverter" />
        <converters:TypeToStringConverter x:Key="TypeToStringConverter" />
    </catel:UserControl.Resources>

    <DockPanel Background="White"
               LastChildFill="True">

        <!-- Navigation Panel -->
        <DockPanel DockPanel.Dock="Left"
                   Width="122"
                   Background="{DynamicResource DynamicMainColor}"
                   LastChildFill="True">

            <DockPanel.Resources>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <ControlTemplate.Resources>

                                    <customControls:HLSColorValueConverter x:Key="ColorConverter" />

                                    <!-- Animation  Storyboards -->
                                    <Storyboard x:Key="CheckedOn">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsCheckedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="CheckedOff">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsCheckedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="PressedOn">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="PressedOff">
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </ControlTemplate.Resources>

                                <!-- Control Layout -->
                                <Grid Name="LayoutGrid"
                                      Background="Transparent"
                                      Height="38">

                                    <!-- Button FX Displayed Behind Content -->
                                    <Grid x:Name="IsCheckedGrid"
                                          Margin="0"
                                          Background="{TemplateBinding Background, Converter={StaticResource ColorConverter}, ConverterParameter='1.5'}"
                                          Visibility="Hidden" />
                                    <Grid x:Name="IsPressedGrid"
                                          Margin="0"
                                          Background="{TemplateBinding Background, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                          Visibility="Hidden">
                                    </Grid>

                                    <!-- Button Content -->
                                    <TextBlock Text="{TemplateBinding Content}"
                                               TextAlignment="Left"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe UI"
                                               FontSize="9pt"
                                               Foreground="White"
                                               Margin="26 0 0 0"
                                               TextOptions.TextRenderingMode="Auto"
                                               TextOptions.TextFormattingMode="Ideal" />
                                </Grid>

                                <!-- FX Triggers -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed"
                                             Value="True">
                                        <Trigger.ExitActions>
                                            <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOff}" />
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOn}" />
                                        </Trigger.EnterActions>
                                    </Trigger>
                                    <Trigger Property="IsChecked"
                                             Value="True">
                                        <Trigger.ExitActions>
                                            <BeginStoryboard x:Name="CheckedOff_BeginStoryboard"
                                                             Storyboard="{StaticResource CheckedOff}" />
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="CheckedOn_BeginStoryboard"
                                                             Storyboard="{StaticResource CheckedOn}" />
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DockPanel.Resources>

            <Grid DockPanel.Dock="Top">
                <!-- BackStage "Toggle" Button -->
                <Button Height="64"
                        Width="64"
                        HorizontalAlignment="Left"
                        Command="{Binding HideBackStageCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">

                                        <ControlTemplate.Resources>

                                            <customControls:HLSColorValueConverter x:Key="ColorConverter" />

                                            <!-- Animation  Storyboards -->
                                            <Storyboard x:Key="PressedOn">
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Duration="00:00:00.0010000"
                                                                               Storyboard.TargetName="IsPressedMask"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="PressedOff">
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Duration="00:00:00.0010000"
                                                                               Storyboard.TargetName="IsPressedMask"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>

                                        </ControlTemplate.Resources>

                                        <!-- Control Layout -->
                                        <Grid Name="LayoutGrid"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Background="Transparent">

                                            <Ellipse x:Name="ButtonMask"
                                                     Fill="{DynamicResource DynamicMainColor}"
                                                     Stroke="{StaticResource GrayEdgeColor}"
                                                     StrokeThickness="3"
                                                     Height="60"
                                                     Width="60"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center" />

                                            <!-- Button FX Displayed Behind Content -->
                                            <Ellipse x:Name="IsPressedMask"
                                                     Fill="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                     Stroke="Transparent"
                                                     StrokeThickness="3"
                                                     Height="60"
                                                     Width="60"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Visibility="Hidden" />

                                            <!-- Button Content -->
                                            <Image Source="pack://application:,,,/Resources/Images/CLPMenuBackIconWhiteBorderless64.png" />
                                        </Grid>

                                        <!-- FX Triggers -->
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsPressed"
                                                     Value="True">
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                     Storyboard="{StaticResource PressedOff}" />
                                                </Trigger.ExitActions>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                     Storyboard="{StaticResource PressedOn}" />
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <ToggleButton DockPanel.Dock="Bottom"
                          Content="Options"
                          Background="{DynamicResource DynamicMainColor}"
                          IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                          IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Options}}" />
            
            <StackPanel VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Margin="0 30 0 0">
                
                <ToggleButton Content="Info"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Info}}" />

                <ToggleButton Content="New"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.New}}" />

                <ToggleButton Content="Open"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Open}}" />

                <ToggleButton Content="Save"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Save}}" />

                <ToggleButton Content="Export"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Export}}" />

            </StackPanel>

            

        </DockPanel>

        <!-- "TitleBar" -->
        <DockPanel DockPanel.Dock="Top"
                   LastChildFill="True"
                   Height="24">

            <TextBlock Text="Classroom Learning Partner"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontFamily="Segoe UI"
                       FontSize="14"
                       Foreground="Black"
                       TextOptions.TextRenderingMode="Auto"
                       TextOptions.TextFormattingMode="Ideal" />
        </DockPanel>

        <!-- Pane Title Text -->
        <TextBlock DockPanel.Dock="Top"
                   Text="{Binding PaneTitleText}"
                   TextAlignment="Left"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   FontFamily="Segoe UI Light"
                   FontSize="40"
                   Foreground="#444444"
                   Margin="42 61 0 0"
                   TextOptions.TextRenderingMode="Auto"
                   TextOptions.TextFormattingMode="Ideal" />

        <!-- Pane View -->
        <ContentControl Margin="42 30 0 0">
            <ContentControl.Resources>

                <ControlTemplate x:Key="NotebookInfoPaneTemplate">
                    <views:NotebookInfoPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="NewNotebookPaneTemplate">
                    <views:NewNotebookPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="OpenNotebookPaneTemplate">
                    <views:OpenNotebookPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="SaveNotebookPaneTemplate">
                    <views:SaveNotebookPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="ExportPaneTemplate">
                    <views:ExportPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="OptionsPaneTemplate">
                    <views:OptionsPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

            </ContentControl.Resources>

            <ContentControl.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- NotebookInfoPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NotebookInfoPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookInfoPaneTemplate}" />
                        </DataTrigger>

                        <!-- NewNotebookPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="NewNotebookPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource NewNotebookPaneTemplate}" />
                        </DataTrigger>

                        <!-- OpenNotebookPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="OpenNotebookPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource OpenNotebookPaneTemplate}" />
                        </DataTrigger>

                        <!-- SaveNotebookPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="SaveNotebookPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource SaveNotebookPaneTemplate}" />
                        </DataTrigger>

                        <!-- ExportPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="ExportPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource ExportPaneTemplate}" />
                        </DataTrigger>

                        <!-- OptionsPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={StaticResource TypeToStringConverter}}"
                                     Value="OptionsPaneViewModel">
                            <Setter Property="Template"
                                    Value="{StaticResource OptionsPaneTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DockPanel>
</catel:UserControl>
