<catel:UserControl x:Class="Classroom_Learning_Partner.Views.BackStageView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:customControls="clr-namespace:CLP.CustomControls;assembly=CLP.CustomControls"
                   xmlns:viewModels="clr-namespace:Classroom_Learning_Partner.ViewModels"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <catel:UserControl.Resources>
        <customControls:HLSColorValueConverter x:Key="ColorConverter" />

        <Style x:Key="PaneSelector" 
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>

                            <customControls:HLSColorValueConverter x:Key="ColorConverter" />

                            <!-- Animation  Storyboards -->
                            <Storyboard x:Key="CheckedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsCheckedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CheckedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsCheckedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="IsPressedGrid"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <!-- Control Layout -->
                        <Grid Name="LayoutGrid"
                                      Background="Transparent"
                                      Height="38">

                            <!-- Button FX Displayed Behind Content -->
                            <Grid x:Name="IsCheckedGrid"
                                          Margin="0"
                                          Background="{TemplateBinding Background, Converter={StaticResource ColorConverter}, ConverterParameter='1.5'}"
                                          Visibility="Hidden" />
                            <Grid x:Name="IsPressedGrid"
                                          Margin="0"
                                          Background="{TemplateBinding Background, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                          Visibility="Hidden">
                            </Grid>

                            <!-- Button Content -->
                            <TextBlock Text="{TemplateBinding Content}"
                                               TextAlignment="Left"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe UI"
                                               FontSize="9pt"
                                               Foreground="White"
                                               Margin="26 0 0 0"
                                               TextOptions.TextRenderingMode="Auto"
                                               TextOptions.TextFormattingMode="Ideal" />
                        </Grid>

                        <!-- FX Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                             Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                             Storyboard="{StaticResource PressedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsChecked"
                                             Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="CheckedOff_BeginStoryboard"
                                                             Storyboard="{StaticResource CheckedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="CheckedOn_BeginStoryboard"
                                                             Storyboard="{StaticResource CheckedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BackstageToggle" 
               TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <ControlTemplate.Resources>

                            <!-- Animation  Storyboards -->
                            <Storyboard x:Key="PressedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Duration="00:00:00.0010000"
                                                                               Storyboard.TargetName="IsPressedMask"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Duration="00:00:00.0010000"
                                                                               Storyboard.TargetName="IsPressedMask"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                            Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <!-- Control Layout -->
                        <Grid Name="LayoutGrid"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Background="Transparent">

                            <Ellipse x:Name="ButtonMask"
                                                     Fill="{DynamicResource DynamicMainColor}"
                                                     Stroke="{StaticResource GrayEdgeColor}"
                                                     StrokeThickness="3"
                                                     Height="50"
                                                     Width="50"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center" />

                            <!-- Button FX Displayed Behind Content -->
                            <Ellipse x:Name="IsPressedMask"
                                                     Fill="{Binding Fill, ElementName=ButtonMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                     Stroke="Transparent"
                                                     StrokeThickness="3"
                                                     Height="50"
                                                     Width="50"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     Visibility="Hidden" />

                            <!-- Button Content -->
                            <Image Source="pack://application:,,,/Resources/Images/CLPMenuBackIconWhiteBorderless64.png"
                                                   Margin="10" />
                        </Grid>

                        <!-- FX Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                                     Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                     Storyboard="{StaticResource PressedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                     Storyboard="{StaticResource PressedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Minimize" 
               TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                                Value="true" />
            <Setter Property="OverridesDefaultStyle"
                                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <ControlTemplate.Resources>

                            <!-- Animation  Storyboards -->
                            <Storyboard x:Key="PressedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <!-- Control Layout -->
                        <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Transparent">

                            <Rectangle x:Name="ColorMask"
                                                   Fill="{DynamicResource DynamicMainColor}"
                                                   Visibility="Collapsed" />

                            <!-- Button FX Displayed Behind Content -->
                            <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Fill, ElementName=ColorMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                   StrokeThickness="0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Visibility="Hidden" />

                            <!-- Button Content -->
                            <Image Source="pack://application:,,,/Resources/Images/WindowControls/MinimizeButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                        </Grid>

                        <!-- FX Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                                 Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                                 Value="False">
                                <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="Maximize" 
               TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                                Value="true" />
            <Setter Property="OverridesDefaultStyle"
                                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <ControlTemplate.Resources>

                            <!-- Animation  Storyboards -->
                            <Storyboard x:Key="PressedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <!-- Control Layout -->
                        <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Transparent">

                            <Rectangle x:Name="ColorMask"
                                                   Fill="{DynamicResource DynamicMainColor}"
                                                   Visibility="Collapsed" />

                            <!-- Button FX Displayed Behind Content -->
                            <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Fill, ElementName=ColorMask, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                   StrokeThickness="0"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Visibility="Hidden" />

                            <!-- Button Content -->
                            <Image Source="pack://application:,,,/Resources/Images/WindowControls/MaximizeButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                        </Grid>

                        <!-- FX Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                                 Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                                 Value="False">
                                <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="Exit" 
               TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
                                Value="true" />
            <Setter Property="OverridesDefaultStyle"
                                Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <ControlTemplate.Resources>

                            <!-- Animation  Storyboards -->
                            <Storyboard x:Key="PressedOn">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Duration="00:00:00.0010000"
                                                                           Storyboard.TargetName="IsPressedMask"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <!-- Control Layout -->
                        <Grid x:Name="LayoutGrid"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Background="Red">

                            <!-- Button FX Displayed Behind Content -->
                            <Rectangle x:Name="IsPressedMask"
                                                   Fill="{Binding Background, ElementName=LayoutGrid, Converter={StaticResource ColorConverter}, ConverterParameter='0.85'}"
                                                 StrokeThickness="0"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 Visibility="Hidden" />

                            <!-- Button Content -->
                            <Image Source="pack://application:,,,/Resources/Images/WindowControls/CloseButton.png"
                                               Height="10"
                                               Width="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                        </Grid>

                        <!-- FX Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed"
                                                 Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                                                 Storyboard="{StaticResource PressedOn}" />
                                </Trigger.EnterActions>
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                                 Value="False">
                                <Setter TargetName="LayoutGrid"
                                                    Property="Opacity"
                                                    Value=".15" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

    </catel:UserControl.Resources>

    <DockPanel Background="White"
               LastChildFill="True">

        <!-- Navigation Panel -->
        <DockPanel DockPanel.Dock="Left"
                   Width="122"
                   Background="{DynamicResource DynamicMainColor}"
                   LastChildFill="True">


            <!-- BackStage "Toggle" Button -->
            <Button DockPanel.Dock="Top" Height="64"
                        Width="64"
                        HorizontalAlignment="Left"
                        Command="{Binding HideBackStageCommand}"
                        Style="{StaticResource BackstageToggle}" />

            <!-- Options Button -->
            <ToggleButton DockPanel.Dock="Bottom"
                          Content="Options"
                          Background="{DynamicResource DynamicMainColor}"
                          IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToOppositeBooleanConverter}}"
                          IsChecked="{Binding CurrentNavigationPane, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Options}}" 
                          Style="{StaticResource PaneSelector}" />

            <StackPanel VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Margin="0 30 0 0">

                <ToggleButton Content="Info"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Info}}" 
                              Style="{StaticResource PaneSelector}" />

                <ToggleButton Content="New"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.New}}"
                              Visibility="{Binding MainWindowViewModel.TeacherOnlyVisibility, Source={x:Static Application.Current}}" 
                              Style="{StaticResource PaneSelector}" />

                <ToggleButton Content="Open"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Open}}"
                              Style="{StaticResource PaneSelector}" />

                <ToggleButton Content="Export"
                              Background="{DynamicResource DynamicMainColor}"
                              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding CurrentNavigationPane, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModels:NavigationPanes.Export}}" 
                              Style="{StaticResource PaneSelector}" />

            </StackPanel>

        </DockPanel>

        <!-- TitleBar -->
        <DockPanel DockPanel.Dock="Top"
                   LastChildFill="True"
                   Background="{StaticResource GrayEdgeColor}"
                   Height="24">

            <!-- Program Close Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ExitProgramCommand}"
                    Width="44"
                    Height="24"
                    Style="{StaticResource Exit}" />

            <!-- Program Maximize Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ToggleMaximizeStateCommand}"
                    Width="24"
                    Height="24"
                    Style="{StaticResource Maximize}" />

            <!-- Program Minimize Button -->
            <Button DockPanel.Dock="Right"
                    Command="{Binding ToggleMinimizeStateCommand}"
                    Width="24"
                    Height="24"
                    Style="{StaticResource Minimize}" />

            <Grid Background="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseMove">
                        <catel:EventToCommand Command="{Binding MoveWindowCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TextBlock Text="Classroom Learning Partner"
                           TextAlignment="Center"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontFamily="Segoe UI"
                           FontSize="14"
                           Foreground="Black"
                           TextOptions.TextRenderingMode="Auto"
                           TextOptions.TextFormattingMode="Ideal" />
            </Grid>

        </DockPanel>

        <!-- Pane View -->
        <ContentControl Margin="42 20 0 0">
            <ContentControl.Resources>

                <ControlTemplate x:Key="NotebookInfoPaneTemplate">
                    <views:NotebookInfoPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="NewPaneTemplate">
                    <views:NewPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="OpenNotebookPaneTemplate">
                    <views:OpenNotebookPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="ExportPaneTemplate">
                    <views:ExportPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

                <ControlTemplate x:Key="OptionsPaneTemplate">
                    <views:OptionsPaneView DataContext="{Binding DisplayedPane}" />
                </ControlTemplate>

            </ContentControl.Resources>

            <ContentControl.Style>
                <Style TargetType="{x:Type Control}">
                    <Style.Triggers>

                        <!-- NotebookInfoPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={converters:TypeOfConverter}}"
                                     Value="{x:Type viewModels:NotebookInfoPaneViewModel}">
                            <Setter Property="Template"
                                    Value="{StaticResource NotebookInfoPaneTemplate}" />
                        </DataTrigger>

                        <!-- NewNotebookPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={converters:TypeOfConverter}}"
                                     Value="{x:Type viewModels:NewPaneViewModel}">
                            <Setter Property="Template"
                                    Value="{StaticResource NewPaneTemplate}" />
                        </DataTrigger>

                        <!-- OpenNotebookPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={converters:TypeOfConverter}}"
                                     Value="{x:Type viewModels:OpenNotebookPaneViewModel}">
                            <Setter Property="Template"
                                    Value="{StaticResource OpenNotebookPaneTemplate}" />
                        </DataTrigger>

                        <!-- ExportPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={converters:TypeOfConverter}}"
                                     Value="{x:Type viewModels:ExportPaneViewModel}">
                            <Setter Property="Template"
                                    Value="{StaticResource ExportPaneTemplate}" />
                        </DataTrigger>

                        <!-- OptionsPane trigger -->
                        <DataTrigger Binding="{Binding DisplayedPane, Converter={converters:TypeOfConverter}}"
                                     Value="{x:Type viewModels:OptionsPaneViewModel}">
                            <Setter Property="Template"
                                    Value="{StaticResource OptionsPaneTemplate}" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
        
    </DockPanel>
</catel:UserControl>
