<catel:UserControl x:Class="Classroom_Learning_Partner.Views.FuzzyFactorCardView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:ac="clr-namespace:AdornedControl"
                   xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters">

    <UserControl.Resources>
        <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />
        <conv:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter" />
        <conv:MultiplyAllIntToTextMultiConverter x:Key="MultiplyAllIntToTextMultiConverter" />
        <conv:DivisionPositionToColorMultiConverter x:Key="DivisionPositionToColorMultiConverter" />
        <conv:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
        <conv:IntToOppositeVisibilityConverter x:Key="IntToOppositeVisibilityConverter" />
        <conv:FFCMarginConverter x:Key="FFCMarginConverter" />
        <conv:RatioToRectMultiConverter x:Key="RatioToRectMultiConverter" />

        <Style x:Key="HorizontalDivisionStyle">
            <Setter Property="Canvas.Left"
                    Value="0" />
            <Setter Property="Canvas.Top"
                    Value="{Binding Position}" />
        </Style>
        <Style x:Key="VerticalDivisionStyle">
            <Setter Property="Canvas.Left"
                    Value="{Binding Position}" />
            <Setter Property="Canvas.Top"
                    Value="0" />
        </Style>

        <SolidColorBrush x:Key="TopLabelColor"
                         Color="DarkOrange" />
        <SolidColorBrush x:Key="LeftLabelColor"
                         Color="Blue" />
        <SolidColorBrush x:Key="DividerColor"
                         Color="DimGray" />
        <SolidColorBrush x:Key="GridColor"
                         Color="CornflowerBlue" />
    </UserControl.Resources>

    <ac:AdornedControl HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAdornerPlacement="Outside"
                       VerticalAdornerPlacement="Outside"
                       IsAdornerVisible="{Binding IsAdornerVisible, Mode=TwoWay}"
                       IsMouseOverShowEnabled="{Binding IsMouseOverShowEnabled}"
                       OpenAdornerTimeOut="{Binding OpenAdornerTimeOut}"
                       CloseAdornerTimeOut="{Binding CloseAdornerTimeOut}">
        <!--This is the adorner-->
        <ac:AdornedControl.AdornerContent>
            <Canvas HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="{Binding Width}"
                    Height="{Binding Height}">

                <Rectangle Stroke="Transparent"
                           StrokeThickness="1"
                           Fill="{DynamicResource DynamicMainColor}"
                           Opacity=".03"
                           IsHitTestVisible="False"
                           RadiusX="10"
                           RadiusY="10"
                           Canvas.Top="-5"
                           Canvas.Left="-5"
                           Width="{Binding Width, Converter={conv:IncreaseNumberConverter}, ConverterParameter=14}"
                           Height="{Binding Height, Converter={conv:IncreaseNumberConverter}, ConverterParameter=14}" />

                <Rectangle Stroke="{DynamicResource DynamicMainColor}"
                           StrokeThickness="1"
                           RadiusX="10"
                           RadiusY="10"
                           Canvas.Top="-5"
                           Canvas.Left="-5"
                           Width="{Binding Width, Converter={conv:IncreaseNumberConverter}, ConverterParameter=14}"
                           Height="{Binding Height, Converter={conv:IncreaseNumberConverter}, ConverterParameter=14}"
                           Visibility="{Binding MainWindowViewModel.IsUsingOldPageObjectBoundary, Source={x:Static Application.Current}, Converter={StaticResource BooleanToCollapsingVisibilityConverter}, ConverterParameter=False}" />

                <Rectangle Stroke="Black"
                           StrokeDashArray="0.5 1.0 0.3"
                           StrokeThickness="2"
                           RadiusX="10"
                           RadiusY="10"
                           Canvas.Top="-5"
                           Canvas.Left="-5"
                           Width="{Binding Width, Converter={conv:IncreaseNumberConverter}, ConverterParameter=10}"
                           Height="{Binding Height, Converter={conv:IncreaseNumberConverter}, ConverterParameter=10}"
                           Visibility="{Binding MainWindowViewModel.IsUsingOldPageObjectBoundary, Source={x:Static Application.Current}, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}" />

                <!--Close Button-->
                <Button Command="{Binding RemoveFuzzyFactorCardCommand}"
                        Width="40"
                        Height="40"
                        Canvas.Left="-40"
                        Canvas.Top="-40"
                        Cursor="Hand">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Stroke="Black"
                                         StrokeThickness="3"
                                         Fill="White"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch" />
                                <Path Data="M0,0 L1,1 M0,1 L1,0"
                                      Stretch="Fill"
                                      Margin="5"
                                      Stroke="Red"
                                      StrokeThickness="3" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <!--Resize Thumb-->
                <Thumb Cursor="SizeNWSE"
                       Width="40"
                       Height="40"
                       Canvas.Right="-40"
                       Canvas.Bottom="-40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DragDelta">
                            <catel:EventToCommand Command="{Binding ResizeFuzzyFactorCardCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragStarted">
                            <catel:EventToCommand Command="{Binding ResizeStartPageObjectCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragCompleted">
                            <catel:EventToCommand Command="{Binding ResizeStopPageObjectCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Stroke="Black"
                                         StrokeThickness="3"
                                         Fill="White"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch" />
                                <Path Stroke="Black"
                                      StrokeThickness="1"
                                      Data="M 8,23 L 23,23 L 23,8" />
                                <Path Stroke="Black"
                                      StrokeThickness="1"
                                      Data="M 12,27 L 27,27 L 27,12" />
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>

            </Canvas>
        </ac:AdornedControl.AdornerContent>

        <Grid Width="{Binding Width}"
              Height="{Binding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding PageObject.LabelLength}" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding PageObject.LabelLength}" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding PageObject.LabelLength}" />
                <ColumnDefinition Width="{Binding ArrayWidth}" />
                <ColumnDefinition Width="{Binding PageObject.LargeLabelLength}" />
            </Grid.ColumnDefinitions>

            <!--Left Labels-->
            <TextBlock Grid.Column="0"
                       Grid.Row="1"
                       IsHitTestVisible="False"
                       Text="{Binding Rows}"
                       TextAlignment="Center"
                       FontWeight="Bold"
                       FontSize="20"
                       Foreground="{StaticResource LeftLabelColor}"
                       Height="23"
                       Width="{Binding ArrayHeight}">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <!--Array top and bottom edges-->
            <Border Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Background="Transparent"
                    Height="{Binding ArrayHeight}"
                    Width="{Binding ArrayWidth, Converter={conv:IncreaseNumberConverter}, ConverterParameter=3}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    BorderThickness="0 3 0 3"
                    Margin="0"
                    SnapsToDevicePixels="True">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="1,0">
                        <GradientStop Color="{Binding BorderColor}"
                                      Offset="0.0" />
                        <GradientStop Color="{Binding BorderColor}"
                                      Offset="0.5" />
                        <GradientStop Color="{Binding FuzzyEdgeColor}"
                                      Offset="1.0" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>

            <!--Right Fuzzy Edge-->
            <Path Grid.Row="1" 
                  Grid.Column="2" 
                  Width="{Binding PageObject.LargeLabelLength}"
                  Stretch="Fill"
                  HorizontalAlignment="Left"
                  Margin="0"
                  Stroke="{Binding FuzzyEdgeColor}"
                  StrokeThickness="3"
                  SnapsToDevicePixels="True"
                  Visibility="{Binding PageObject.CurrentRemainder, Converter={StaticResource IntToVisibilityConverter}}"
                  Data="M -1,0 L 1,0 C 1,0 2,1 1,2 C 1,2 0,3 1,4 C 1,4 2,5 1,6 C 1,6 0,7 1,8 C 1,8 2,9 1,10 C 1,10 0,11 1,12 C 1,12 2,13 1,14 C 1,14 0,15 1,16 C 1,16 2,17 1,18 C 1,18 0,19 1,20 C 1,20 2,21 1,22 C 1,22 0,23 1,24 C 1,24 2,25 1,26 M 1,26 L -1,26" />

            <!--Grid seperated at at last divider-->
            <Grid Grid.Column="1"
                  Grid.Row="1"
                  Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding PageObject.LastDivisionPosition}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0"
                        Grid.Row="0"
                        Height="{Binding ArrayHeight}"
                        Width="{Binding PageObject.LastDivisionPosition}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        BorderBrush="{Binding BorderColor}"
                        BorderThickness="0 3 0 3"
                        SnapsToDevicePixels="True">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background"
                                Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGridOn}"
                                         Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>

                                            <DrawingBrush TileMode="Tile"
                                                      ViewportUnits="RelativeToBoundingBox">
                                                <DrawingBrush.Viewport>
                                                    <MultiBinding Converter="{StaticResource RatioToRectMultiConverter}">
                                                        <Binding Path="PageObject.LastDivisionPosition" />
                                                        <Binding Path="ArrayHeight" />
                                                        <Binding Path="GridSquareSize" />
                                                    </MultiBinding>
                                                </DrawingBrush.Viewport>
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup>
                                                        <!--Horizontal Grid Line-->
                                                        <GeometryDrawing Geometry="M0,20 L20,20">
                                                            <GeometryDrawing.Pen>
                                                                <Pen Thickness=".3"
                                                                 Brush="{StaticResource GridColor}" />
                                                            </GeometryDrawing.Pen>
                                                        </GeometryDrawing>
                                                        <!--Vertical Grid Line-->
                                                        <GeometryDrawing Geometry="M20,0 L20,20">
                                                            <GeometryDrawing.Pen>
                                                                <Pen Thickness=".3"
                                                                 Brush="{StaticResource GridColor}" />
                                                            </GeometryDrawing.Pen>
                                                        </GeometryDrawing>
                                                    </DrawingGroup>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>

                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <!--Vertical Divisions-->
                <ItemsControl Grid.Column="0"
                              Grid.Row="0"
                              ItemsSource="{Binding VerticalDivisions}"
                              ItemContainerStyle="{StaticResource VerticalDivisionStyle}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Height="Auto"
                                    Width="Auto" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas Width="{Binding Length}"
                                    Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}">

                                <!--Array Shading-->
                                <Rectangle Width="{Binding Length}"
                                           Margin="0 3"
                                           Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}, 
                                                                      Converter={conv:IncreaseNumberConverter}, 
                                                                      ConverterParameter=-6}"
                                           StrokeThickness="0"
                                           Opacity=".3">
                                    <Rectangle.Fill>
                                        <MultiBinding Converter="{StaticResource DivisionPositionToColorMultiConverter}">
                                            <Binding Path="Position" />
                                            <Binding Path="DataContext.VerticalDivisions"
                                                     RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}" />
                                        </MultiBinding>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <!--The Visible Division Line-->
                                <Rectangle Tag="DivisionHitBox"
                                           Width="3"
                                           Margin="0 3"
                                           Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}, 
                                                                      Converter={conv:IncreaseNumberConverter}, 
                                                                      ConverterParameter=-6}"
                                           StrokeThickness="0"
                                           Fill="{StaticResource DividerColor}"
                                           Opacity=".7"
                                           Visibility="{Binding Position, Converter={StaticResource DoubleToVisibilityConverter}}" />

                                <!--Label Inside Snapped-in Array-->
                                <Grid VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Height="{Binding Length}"
                                      Width="{Binding DataContext.ArrayHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                      Visibility="{Binding Value, Converter={StaticResource IntToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <TextBlock Grid.Column="0"
                                               IsHitTestVisible="False"
                                               Text="{Binding DataContext.Rows, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Right"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="{StaticResource LeftLabelColor}"
                                               Height="23" />
                                    <TextBlock Grid.Column="1"
                                               IsHitTestVisible="False"
                                               Margin="3"
                                               Text="x"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Height="23" />
                                    <TextBlock Grid.Column="2"
                                               IsHitTestVisible="False"
                                               Text="{Binding Value}"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"
                                               FontSize="20"
                                               FontWeight="Bold"
                                               Foreground="{StaticResource TopLabelColor}"
                                               Height="23" />
                                </Grid>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--Array Left edge-->
                <Border Grid.Row="0"
                        Grid.Column="0"
                        Height="{Binding ArrayHeight}"
                        Width="{Binding ArrayWidth}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        BorderBrush="{Binding BorderColor}"
                        BorderThickness="3 0 0 0"
                        Margin="0"
                        SnapsToDevicePixels="True" />

                <!--Black line for last divider-->
                <Border Grid.Column="1"
                        Grid.Row="0"
                        BorderThickness="3 0 0 0"
                        BorderBrush="{Binding BorderColor}" />

                <!--Value of the remainder so far-->
                <Ellipse Grid.Column="1"
                         Grid.Row="0"
                         Height="34"
                         Width="36"
                         StrokeThickness="3"
                         Stroke="Black"
                         Fill="White"
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Center"
                         Margin="0 0 0 30"
                         Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToVisibilityConverter}}" />
                <TextBlock Grid.Column="1"
                           Grid.Row="0"
                           Foreground="Black"
                           IsHitTestVisible="False"
                           TextAlignment="Center"
                           Margin="0 0 0 35"
                           FontWeight="Bold"
                           FontSize="18"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Center"
                           Text="{Binding PageObject.CurrentRemainder}"
                           Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToVisibilityConverter}}" />

                <!--Dividend when arrays are snapped in (on right edge of arrays)-->
                <Ellipse Grid.Column="1"
                         Grid.Row="0"
                         Height="63"
                         Width="63"
                         StrokeThickness="3"
                         Stroke="Black"
                         Fill="White"
                         VerticalAlignment="Top"
                         HorizontalAlignment="Left"
                         Margin="-32 15 0 0"
                         Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToVisibilityConverter}}" />

                <TextBlock Grid.Column="1"
                           Grid.Row="0"
                           Height="63"
                           Width="63"
                           IsHitTestVisible="False"
                           FontWeight="Bold"
                           FontSize="32"
                           Foreground="Black"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left"
                           Margin="-32 23 0 0"
                           Text="{Binding Dividend}"
                           TextAlignment="Center"
                           Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToVisibilityConverter}}" />
            </Grid>

            <!--Dividend with no arrays snapped in (centered)-->
            <Ellipse Grid.Column="1"
                     Grid.Row="1"
                     Height="63"
                     Width="63"
                     StrokeThickness="3"
                     Stroke="Black"
                     Fill="Transparent"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Center"
                     Margin="0 15 0 0"
                     Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToOppositeVisibilityConverter}}" />

            <TextBlock Grid.Column="1"
                       Grid.Row="1"
                       IsHitTestVisible="False"
                       FontWeight="Bold"
                       FontSize="32"
                       Foreground="Black"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Center"
                       Margin="0 23 0 0"
                       Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToOppositeVisibilityConverter}}"
                       Text="{Binding Dividend}" />

            <!--Array hit box-->
            <Thumb Tag="PageObjectHitBox"
                   Grid.Row="1"
                   Grid.Column="1"
                   Grid.ColumnSpan="2"
                   VerticalAlignment="Stretch"
                   HorizontalAlignment="Stretch">
                <Thumb.Template>
                    <ControlTemplate>
                        <Rectangle Fill="Transparent"
                                   Stroke="Transparent"
                                   Stretch="Fill" />
                    </ControlTemplate>
                </Thumb.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragStarted">
                        <catel:EventToCommand Command="{Binding DragStartPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragDelta">
                        <catel:EventToCommand Command="{Binding DragPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragCompleted">
                        <catel:EventToCommand Command="{Binding DragStopPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Thumb>
            
            <StackPanel Grid.Row="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        Visibility="{Binding PageObject.GroupsSubtracted, Converter={StaticResource IntToVisibilityConverter}}"
                        Margin="{Binding PageObject.LastDivisionPosition, Converter={StaticResource FFCMarginConverter}}">

                <!--Bottom Label (Equation)-->
                <TextBlock TextAlignment="Center"
                           Margin="1 4 1 0"
                           FontWeight="Bold"
                           FontSize="18"
                           Foreground="{StaticResource LeftLabelColor}"
                           Text="{Binding Rows}" />
                <TextBlock TextAlignment="Center"
                           Margin="1 4 1 0"
                           FontWeight="Bold"
                           FontSize="18"
                           Text="x" />
                <TextBlock TextAlignment="Center"
                           Margin="1 4 1 0"
                           FontWeight="Bold"
                           FontSize="18"
                           Foreground="{StaticResource TopLabelColor}"
                           Text="{Binding PageObject.GroupsSubtracted}" />
                <TextBlock TextAlignment="Center"
                           Margin="1 4 1 0"
                           FontWeight="Bold"
                           FontSize="18"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Center"
                           Text="=" />
                <Grid>
                    <Ellipse Height="34"
                             Width="37"
                             Margin="1 0 0 0"
                             StrokeThickness="3"
                             Stroke="Black"
                             Fill="Transparent" />
                    <TextBlock TextAlignment="Center"
                               Margin="2 4 1 0"
                               FontWeight="Bold"
                               FontSize="18"
                               Foreground="Black"
                               IsHitTestVisible="False">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource MultiplyAllIntToTextMultiConverter}">
                                <Binding Path="Rows" />
                                <Binding Path="PageObject.GroupsSubtracted" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </StackPanel>

        </Grid>

    </ac:AdornedControl>

</catel:UserControl>