<catel:UserControl x:Class="Classroom_Learning_Partner.Views.CLPArrayView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:ac="clr-namespace:AdornedControl"
                   xmlns:oldconv="clr-namespace:Classroom_Learning_Partner.Resources"
                   xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters">

    <UserControl.Resources>
        <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />
        <oldconv:LengthConverter x:Key="LengthConverter" />
        <oldconv:NegativeLengthSubtractConverter x:Key="NegativeLengthSubtractConverter" />
        <conv:ZeroToQuestionMarkConverter x:Key="ZeroToQuestionMarkConverter" />
        <conv:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter" />
        <conv:RatioToRectMultiConverter x:Key="RatioToRectMultiConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="HorizontalDivisionStyle">
            <Setter Property="Canvas.Left"
                    Value="0" />
            <Setter Property="Canvas.Top"
                    Value="{Binding Position}" />
        </Style>

        <Style x:Key="VerticalDivisionStyle">
            <Setter Property="Canvas.Left"
                    Value="{Binding Position}" />
            <Setter Property="Canvas.Top"
                    Value="0" />
        </Style>

        <SolidColorBrush x:Key="TopLabelColor"
                         Color="DarkOrange" />
        <SolidColorBrush x:Key="LeftLabelColor"
                         Color="Blue" />
    </UserControl.Resources>

    <ac:AdornedControl HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAdornerPlacement="Outside"
                       VerticalAdornerPlacement="Outside"
                       IsAdornerVisible="{Binding IsAdornerVisible, Mode=TwoWay}"
                       IsMouseOverShowEnabled="{Binding IsMouseOverShowEnabled}"
                       OpenAdornerTimeOut="{Binding OpenAdornerTimeOut}"
                       CloseAdornerTimeOut="{Binding CloseAdornerTimeOut}">
        <!--This is the adorner-->
        <ac:AdornedControl.AdornerContent>
            <Canvas HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="{Binding Width}"
                    Height="{Binding Height}">

                <Rectangle Stroke="Transparent"
                           StrokeThickness="1"
                           Fill="{DynamicResource DynamicMainColor}"
                           Opacity=".03"
                           IsHitTestVisible="False"
                           RadiusX="10"
                           RadiusY="10"
                           Canvas.Top="-5"
                           Canvas.Left="-5"
                           Width="{Binding Width, Converter={StaticResource LengthConverter}, ConverterParameter=10}"
                           Height="{Binding Height, Converter={StaticResource LengthConverter}, ConverterParameter=10}" />

                <Rectangle Stroke="{DynamicResource DynamicMainColor}"
                           StrokeThickness="1"
                           RadiusX="10"
                           RadiusY="10"
                           Canvas.Top="-5"
                           Canvas.Left="-5"
                           Width="{Binding Width, Converter={StaticResource LengthConverter}, ConverterParameter=10}"
                           Height="{Binding Height, Converter={StaticResource LengthConverter}, ConverterParameter=10}" />

                <!--Close Button-->
                <Button Command="{Binding RemovePageObjectCommand}"
                        Width="40"
                        Height="40"
                        Canvas.Left="-40"
                        Canvas.Top="-40"
                        Cursor="Hand">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Stroke="Black"
                                         StrokeThickness="3"
                                         Fill="White"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch" />
                                <Path Data="M0,0 L1,1 M0,1 L1,0"
                                      Stretch="Fill"
                                      Margin="5"
                                      Stroke="Red"
                                      StrokeThickness="3" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <!--Resize Thumb-->
                <Thumb Cursor="SizeNWSE"
                       Width="40"
                       Height="40"
                       Canvas.Right="-40"
                       Canvas.Bottom="-40">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DragDelta">
                            <catel:EventToCommand Command="{Binding ResizeArrayCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragStarted">
                            <catel:EventToCommand Command="{Binding ResizeStartPageObjectCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragCompleted">
                            <catel:EventToCommand Command="{Binding ResizeStopPageObjectCommand}"
                                                  PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Stroke="Black"
                                         StrokeThickness="3"
                                         Fill="White"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch" />
                                <Path Stroke="Black"
                                      StrokeThickness="1"
                                      Data="M 8,23 L 23,23 L 23,8" />
                                <Path Stroke="Black"
                                      StrokeThickness="1"
                                      Data="M 12,27 L 27,27 L 27,12" />
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>

                <!--Snap Button-->
                <Button Command="{Binding SnapArrayCommand}"
                        Width="40"
                        Height="40"
                        Canvas.Right="-40"
                        Canvas.Top="-40"
                        Cursor="Hand">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Image Height="40"
                                   Width="40"
                                   Source="pack://application:,,,/Resources/Images/AdornerImages/ArraySnap64.png" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                
            </Canvas>

        </ac:AdornedControl.AdornerContent>

        <Grid Width="{Binding Width}"
              Height="{Binding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding PageObject.LabelLength}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding PageObject.LabelLength}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--Large Labels-->
            <TextBlock Grid.Column="1"
                       Grid.Row="0"
                       IsHitTestVisible="False"
                       Text="{Binding Columns}"
                       TextAlignment="Center"
                       FontWeight="Bold"
                       FontSize="20"
                       Foreground="{StaticResource TopLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayWidth}"
                       Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <TextBlock Grid.Column="0"
                       Grid.Row="1"
                       IsHitTestVisible="False"
                       Text="{Binding Rows}"
                       TextAlignment="Center"
                       FontWeight="Bold"
                       FontSize="20"
                       Foreground="{StaticResource LeftLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayHeight}"
                       Visibility="{Binding IsSideLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <Rectangle x:Name="ArrayBackground"
                       Grid.Row="1"
                       Grid.Column="1"
                       Width="{Binding ArrayWidth}"
                       Height="{Binding ArrayHeight}"
                       Fill="{Binding Transparency}"
                       Stroke="Black"
                       StrokeThickness="3" />

            <!--This is the actual array-->
            <Thumb Grid.Row="1"
                   Grid.Column="1"
                   Tag="ArrayBodyHitBox"
                   Width="{Binding ArrayWidth}"
                   Height="{Binding ArrayHeight}">
                <Thumb.Template>
                    <ControlTemplate>
                        <Rectangle x:Name="Array"
                                   Width="{Binding ArrayWidth}"
                                   Height="{Binding ArrayHeight}"
                                   Stroke="Black"
                                   StrokeThickness="3">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill"
                                            Value="Transparent" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGridOn}"
                                                     Value="True">
                                            <Setter Property="Fill">
                                                <Setter.Value>

                                                    <DrawingBrush TileMode="Tile"
                                                                  ViewportUnits="RelativeToBoundingBox">
                                                        <DrawingBrush.Viewport>
                                                            <MultiBinding Converter="{StaticResource RatioToRectMultiConverter}">
                                                                <Binding Path="ArrayWidth" />
                                                                <Binding Path="ArrayHeight" />
                                                                <Binding Path="GridSquareSize" />
                                                            </MultiBinding>
                                                        </DrawingBrush.Viewport>
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <!--Horizontal Grid Line-->
                                                                <GeometryDrawing Geometry="M0,20 L20,20">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Thickness="1"
                                                                             Brush="PowderBlue" />
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                                <!--Vertical Grid Line-->
                                                                <GeometryDrawing Geometry="M20,0 L20,20">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Thickness="1"
                                                                             Brush="PowderBlue" />
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>

                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </ControlTemplate>
                </Thumb.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragStarted">
                        <catel:EventToCommand Command="{Binding DragStartPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragDelta">
                        <catel:EventToCommand Command="{Binding DragPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DragCompleted">
                        <catel:EventToCommand Command="{Binding DragStopPageObjectCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Thumb>

            <!--Horizontal Divisions-->
            <ItemsControl Grid.Row="1"
                          Grid.Column="1"
                          ItemsSource="{Binding HorizontalDivisions}"
                          ItemContainerStyle="{StaticResource HorizontalDivisionStyle}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Height="Auto"
                                Width="Auto" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Height="{Binding Length}"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}">
                            <!--The Visible Division Line-->
                            <Rectangle Tag="DivisionHitBox"
                                       Height="3"
                                       Margin="3 0"
                                       Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}, 
                                                                    Converter={StaticResource LengthConverter}, 
                                                                    ConverterParameter=-6}"
                                       StrokeThickness="0"
                                       Fill="{StaticResource LeftLabelColor}"
                                       Visibility="{Binding Position, Converter={StaticResource DoubleToVisibilityConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <catel:EventToCommand
                                            Command="{Binding DataContext.EraseDivisionCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                            PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Rectangle>

                            <!--The Small Label-->
                            <Grid
                                Canvas.Right="{Binding DataContext.PageObject.LabelLength, 
                                                         RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}},
                                                         Converter={StaticResource NegativeLengthSubtractConverter},
                                                         ConverterParameter=0}"
                                Height="{Binding Length}"
                                Width="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}">
                                <TextBlock IsHitTestVisible="False"
                                           Text="{Binding Value, Converter={StaticResource ZeroToQuestionMarkConverter}}"
                                           TextAlignment="Center"
                                           FontSize="20"
                                           Foreground="{StaticResource LeftLabelColor}"
                                           Height="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           Width="{Binding Length}">
                                    <TextBlock.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <Rectangle Tag="LeftLabelHitBox"
                                           Fill="Transparent"
                                           Width="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           Height="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <catel:EventToCommand
                                                Command="{Binding DataContext.EditLabelCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                                PassEventArgsToCommand="False"
                                                CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Rectangle>
                            </Grid>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--Vertical Divisions-->
            <ItemsControl Grid.Row="1"
                          Grid.Column="1"
                          ItemsSource="{Binding VerticalDivisions}"
                          ItemContainerStyle="{StaticResource VerticalDivisionStyle}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Height="Auto"
                                Width="Auto" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas Width="{Binding Length}"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}">
                            <!--The Visible Division Line-->
                            <Rectangle Tag="DivisionHitBox"
                                       Width="3"
                                       Margin="0 3"
                                       Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}, 
                                                                      Converter={StaticResource LengthConverter}, 
                                                                      ConverterParameter=-6}"
                                       StrokeThickness="0"
                                       Fill="{StaticResource TopLabelColor}"
                                       Visibility="{Binding Position, Converter={StaticResource DoubleToVisibilityConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <catel:EventToCommand
                                            Command="{Binding DataContext.EraseDivisionCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                            PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Rectangle>

                            <!--The Small Label-->
                            <Grid
                                Canvas.Bottom="{Binding DataContext.PageObject.LabelLength, 
                                                          RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}},
                                                          Converter={StaticResource NegativeLengthSubtractConverter},
                                                          ConverterParameter=0}"
                                Width="{Binding Length}"
                                Height="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}">
                                <TextBlock IsHitTestVisible="False"
                                           Text="{Binding Value, Converter={StaticResource ZeroToQuestionMarkConverter}}"
                                           TextAlignment="Center"
                                           FontSize="20"
                                           Foreground="{StaticResource TopLabelColor}"
                                           Height="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           Width="{Binding Length}" />
                                <Rectangle Tag="TopLabelHitBox"
                                           Fill="Transparent"
                                           Width="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           Height="{Binding DataContext.PageObject.LabelLength, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <catel:EventToCommand
                                                Command="{Binding DataContext.EditLabelCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}}"
                                                PassEventArgsToCommand="False"
                                                CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Rectangle>
                            </Grid>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </Grid>

    </ac:AdornedControl>

</catel:UserControl>