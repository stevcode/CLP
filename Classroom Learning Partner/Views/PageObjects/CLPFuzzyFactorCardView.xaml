<catel:UserControl x:Class="Classroom_Learning_Partner.Views.CLPFuzzyFactorCardView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:ac="clr-namespace:AdornedControl"
                   xmlns:oldconv="clr-namespace:Classroom_Learning_Partner.Resources"
                   xmlns:conv="clr-namespace:Classroom_Learning_Partner.Converters">

    <UserControl.Resources>
        <catel:BooleanToOppositeBooleanConverter x:Key="BooleanToOppositeBooleanConverter" />
        <catel:BooleanToHidingVisibilityConverter x:Key="BooleanToHidingVisibilityConverter" />
        <oldconv:LengthConverter x:Key="LengthConverter" />
        <oldconv:NegativeLengthSubtractConverter x:Key="NegativeLengthSubtractConverter" />
        <conv:ZeroToQuestionMarkConverter x:Key="ZeroToQuestionMarkConverter" />
        <conv:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter" />
        <conv:AllBoolToVisibilityMultiConverter x:Key="AllBoolToVisibilityMultiConverter" />
        <conv:MultiplyAllIntToTextMultiConverter x:Key="MultiplyAllIntToTextMultiConverter" />
        <conv:BooleanToOppositeVisibilityConverter x:Key="BooleanToOppositeVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <SolidColorBrush x:Key="TopLabelColor" Color="DarkOrange" />
        <SolidColorBrush x:Key="LeftLabelColor" Color="Blue" />
    </UserControl.Resources>

    <ac:AdornedControl HorizontalAlignment="Center" VerticalAlignment="Center"
                       HorizontalAdornerPlacement="Outside" VerticalAdornerPlacement="Outside"
                       IsAdornerVisible="{Binding IsAdornerVisible, Mode=TwoWay}"
                       IsMouseOverShowEnabled="{Binding IsMouseOverShowEnabled}"
                       OpenAdornerTimeOut="{Binding OpenAdornerTimeOut}"
                       CloseAdornerTimeOut="{Binding CloseAdornerTimeOut}">
        <!--This is the adorner-->
        <ac:AdornedControl.AdornerContent>
            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center"
                    Width="{Binding Width}" Height="{Binding Height}">

                <Rectangle Stroke="Black" StrokeDashArray="0.5 1.0 0.3" StrokeThickness="2"
                           RadiusX="10" RadiusY="10"
                           Canvas.Top="-5" Canvas.Left="-5"
                           Width="{Binding Width, Converter={StaticResource LengthConverter}, ConverterParameter=10}"
                           Height="{Binding Height, Converter={StaticResource LengthConverter}, ConverterParameter=10}"
                           Visibility="{Binding IsDefaultAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <!--Close Button-->
                <Button Command="{Binding RemovePageObjectCommand}"
                        Cursor="Hand"
                        Width="40" Height="40"
                        Canvas.Left="-40" Canvas.Top="-40"
                        Visibility="{Binding IsDefaultAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Stroke="Black" StrokeThickness="3" Fill="White"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <Path Data="M0,0 L1,1 M0,1 L1,0"
                                      Stretch="Fill" Margin="5"
                                      Stroke="Red" StrokeThickness="3" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <!--Drag Thumb-->
                <Thumb Cursor="ScrollAll"
                       Width="40" Height="40"
                       Canvas.Right="-40" Canvas.Top="-40"
                       Visibility="{Binding IsDefaultAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DragDelta">
                            <catel:EventToCommand Command="{Binding DragPageObjectCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragStarted">
                            <catel:EventToCommand Command="{Binding DragStartPageObjectCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragCompleted">
                            <catel:EventToCommand Command="{Binding DragStopPageObjectCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Stroke="Black" StrokeThickness="3" Fill="White"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 5,20 L 10,15 L 10,25 L 5,20" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 35,20 L 30,15 L 30,25 L 35,20" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 20,5 L 20,35" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 20,35 L 15,30 L 25,30 L 20,35" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 20,5 L 15,10 L 25,10 L 20,5" />
                                <Path Stroke="Black" StrokeThickness="1" Fill="Black"
                                      Data="M 5,20 L 35,20" />
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>

                <!--Resize Thumb-->
                <Thumb Cursor="SizeNWSE"
                       Width="40" Height="40"
                       Canvas.Right="-40" Canvas.Bottom="-40"
                       Visibility="{Binding IsDefaultAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DragDelta">
                            <catel:EventToCommand Command="{Binding ResizeArrayCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragStarted">
                            <catel:EventToCommand Command="{Binding ResizeStartPageObjectCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DragCompleted">
                            <catel:EventToCommand Command="{Binding ResizeStopPageObjectCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Thumb.Template>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Stroke="Black" StrokeThickness="3" Fill="White"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <Path Stroke="Black" StrokeThickness="1"
                                      Data="M 8,23 L 23,23 L 23,8" />
                                <Path Stroke="Black" StrokeThickness="1"
                                      Data="M 12,27 L 27,27 L 27,12" />
                            </Grid>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>

                <!--Rotate Array Button-->
                <Button Command="{Binding RotateArrayCommand}"
                        Width="40" Height="40"
                        Canvas.Right="-50"
                        Canvas.Top="20"
                        Visibility="{Binding IsRotateAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Stroke="Black" StrokeThickness="3" Fill="White"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <Image Source="pack://application:,,,/Resources/Images/AdornerImages/ArrayRotate64.png"
                                       Height="25" Width="25" Margin="6"
                                       HorizontalAlignment="Left" VerticalAlignment="Top" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <!--Duplicate Array Button-->
                <Button Command="{Binding DuplicateArrayCommand}"
                        Cursor="Hand"
                        Width="40" Height="40"
                        Canvas.Left="-40"
                        Canvas.Bottom="-40"
                        Visibility="{Binding IsDefaultAdornerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Stroke="Black" StrokeThickness="3" Fill="White"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                <Path Data="M0.5,0 L0.5,1 M0,0.5 L1,0.5" 
                                      Stretch="Fill" Margin="5"
                                      Stroke="Green" StrokeThickness="3" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Canvas>
        </ac:AdornedControl.AdornerContent>

        <Grid Width="{Binding Width}" Height="{Binding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding PageObject.LabelLength}" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding PageObject.LabelLength}"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding PageObject.LabelLength}" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding PageObject.LabelLength}" />
            </Grid.ColumnDefinitions>

            <!--Top Labels-->
            <TextBlock Grid.Column="1" Grid.Row="0" IsHitTestVisible="False"
                       Text="{Binding Columns}" TextAlignment="Center"
                       FontWeight="Bold" FontSize="{Binding PageObject.LabelLength}"
                       Foreground="{StaticResource TopLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayWidth}"
                       Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <TextBlock Grid.Column="1" Grid.Row="0" IsHitTestVisible="False" 
                       Text="?" TextAlignment="Center"
                       FontWeight="Bold" FontSize="{Binding PageObject.LabelLength}"
                       Foreground="{StaticResource TopLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayWidth}"
                       Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToOppositeVisibilityConverter}}"/>

            <!--Left Labels-->
            <TextBlock Grid.Column="0" Grid.Row="1" IsHitTestVisible="False"
                       Text="{Binding Rows}" TextAlignment="Center"
                       FontWeight="Bold" FontSize="{Binding PageObject.LabelLength}"
                       Foreground="{StaticResource LeftLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayHeight}"
                       Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToOppositeVisibilityConverter}}">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <TextBlock Grid.Column="0" Grid.Row="1" IsHitTestVisible="False"
                       Text="?" TextAlignment="Center"
                       FontWeight="Bold" FontSize="{Binding PageObject.LabelLength}"
                       Foreground="{StaticResource LeftLabelColor}"
                       Height="{Binding PageObject.LabelLength}"
                       Width="{Binding ArrayHeight}"
                       Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <!--Background Color for Array-->
            <Rectangle Grid.Row="1" Grid.Column="1"
                       Width="{Binding ArrayWidth}" Height="{Binding ArrayHeight}"
                       Fill="{Binding PageObject.BackgroundColor}" StrokeThickness="0" Opacity="0.20" />

            <TextBlock Grid.Column="1" Grid.Row="1" IsHitTestVisible="False"
                       TextAlignment="Center"
                       FontWeight="Bold" FontSize="32"
                       Foreground="Black"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource MultiplyAllIntToTextMultiConverter}">
                        <Binding Path="Columns" />
                        <Binding Path="Rows" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <!--This is the actual array-->
            <Path Grid.Row="1" Grid.Column="1"
                    Width="{Binding ArrayWidth}" Height="{Binding ArrayHeight}"
                    Fill="Transparent" Stroke="Black" StrokeThickness="3"
                    Stretch="Fill"
                    Data="M 0,0 L 100,0 M 0,0 L 0,100">
            </Path>

            <!--Array hit box-->
            <Rectangle x:Name="Array" Grid.Row="1" Grid.Column="1"
                       Tag="ArrayBodyHitBox"
                       Width="{Binding ArrayWidth}" Height="{Binding ArrayHeight}"
                       Fill="Transparent" Stroke="Transparent" StrokeThickness="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <catel:EventToCommand Command="{Binding ToggleMainArrayAdornersCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Rectangle>

            <!--Right Fuzzy Edge-->
            <Path Grid.Row="1" Grid.Column="2"
                  Width="{Binding LabelLength}" Height ="{Binding ArrayHeight}"
                  Stretch="Fill" Margin="0"
                  Stroke="Gray" StrokeThickness="3" 
                  HorizontalAlignment="Left"
                  Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToOppositeVisibilityConverter}}"
                  Data="M -1,0 L 1,0 C 1,0 2,1 1,2 C 1,2 0,3 1,4 C 1,4 2,5 1,6 C 1,6 0,7 1,8 C 1,8 2,9 1,10 C 1,10 0,11 1,12 C 1,12 2,13 1,14 C 1,14 0,15 1,16 C 1,16 2,17 1,18 C 1,18 0,19 1,20 C 1,20 2,21 1,22 C 1,22 0,23 1,24 C 1,24 2,25 1,26 M 1,26 L -1,26" />

                <Path Grid.Row="1" Grid.Column="1"
                  Width="{Binding LabelLength}" Height ="{Binding ArrayHeight}"
                  Stretch="Fill" Margin="0"
                  Stroke="Black" StrokeThickness="3" 
                  VerticalAlignment="Bottom"
                  Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToOppositeVisibilityConverter}}"
                  Data="M 0,0 L 100,0" />

                <!--Bottom Fuzzy Edge-->
            <Path Grid.Row="2" Grid.Column="1"
                  Width ="{Binding ArrayWidth}" Height="{Binding LabelLength}"
                  Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                  VerticalAlignment="Top"
                  Data="M 0,-1 L 0,0 C 0,0 1,1 2,0 C 2,0 3,-1 4,0 M 4,0 C 4,0 5,1 6,0 C 6,0 7,-1 8,0 C 8,0 9,1 10,0 C 10,0 11,-1 12,0 C 12,0 13,1 14,0 C 14,0 15,-1 16,0 C 16,0 17,1 18,0 C 18,0 19,-1 20,0 C 20,0 21,1 22,0 C 22,0 23,-1 24,0 C 24,0 25,1 26,0  M 26,0 L 26,-1"
                  Stretch="Fill" Margin="0"
                  Stroke="Gray" StrokeThickness="3" />

            <Path Grid.Row="1" Grid.Column="1"
                  Width="{Binding LabelLength}" Height ="{Binding ArrayHeight}"
                  Visibility="{Binding IsTopLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Stretch="Fill" Margin="0"
                  Stroke="Black" StrokeThickness="3" 
                  HorizontalAlignment="Right"
                  Data="M 0,0 L 0,100"/>

        </Grid>

    </ac:AdornedControl>

</catel:UserControl>