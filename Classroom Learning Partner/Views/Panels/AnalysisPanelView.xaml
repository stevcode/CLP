<catel:UserControl x:Class="Classroom_Learning_Partner.Views.AnalysisPanelView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://schemas.catelproject.com"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:sys="clr-namespace:System;assembly=mscorlib"
                   xmlns:viewModel="clr-namespace:Classroom_Learning_Partner.ViewModels"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:entities="clr-namespace:CLP.Entities;assembly=CLP.Entities"
                   xmlns:orc="http://www.wildgums.net.au/orc">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="AnswerDefinitions"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="viewModel:AnswerDefinitions" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ManualTags"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="viewModel:ManualTags" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Style to override ListBoxItem selection visuals for Pages -->
        <Style x:Key="ListBoxItemBlankStyle"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border Background="{StaticResource GrayBackgroundColor}"
            BorderBrush="{StaticResource GrayEdgeColor}"
            BorderThickness="{Binding Location, Converter={converters:PanelLocationToThicknessConverter}, ConverterParameter={StaticResource PanelBorderThickeness}}"
            Width="{Binding Length}">

        <Grid>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding MainWindowViewModel.NotStudentVisibility, Source={x:Static Application.Current}}">

                <ToggleButton Name="AnalysisCommandsToggleButton"
                              DockPanel.Dock="Top"
                              IsChecked="False"
                              Height="20"
                              Margin="1">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Content"
                                    Value="Show Analysis Commands" />
                            <Style.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter Property="Content"
                                            Value="Hide Analysis Commands" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <orc:StackGrid DockPanel.Dock="Top"
                                 Margin="5 0"
                                 Visibility="{Binding IsChecked, ElementName=AnalysisCommandsToggleButton, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Button Content="Run Page Analysis"
                            Command="{Binding GenerateSemanticEventsCommand}"
                            Height="20"
                            Margin="1"
                            Grid.ColumnSpan="2" />

                    <StackPanel Orientation="Horizontal"
                                Height="20"
                                Margin="1"
                                Grid.ColumnSpan="2">
                        <CheckBox IsChecked="{Binding IsDebuggingFlag}" />
                        <TextBlock Text="Debug" />
                    </StackPanel>

                    <Button Content="Show Analysis Clusters"
                            Command="{Binding ShowAnalysisClustersCommand}"
                            Height="20"
                            Margin="1"
                            Grid.ColumnSpan="2" />

                    <Button Content="Cluster Ink:"
                            Command="{Binding ClusterTestCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=ClusterTypes}"
                            Height="20"
                            Margin="1" />

                    <ComboBox x:Name="ClusterTypes"
                              ItemsSource="{Binding ClusterTypes}"
                              FontSize="12"
                              Height="18"
                              Margin="1"
                              Padding="5 0"
                              VerticalAlignment="Center">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="FontSize"
                                        Value="18" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <Button Content="Clear Temp Boundaries"
                            Command="{Binding ClearTempBoundariesCommand}"
                            Height="20"
                            Margin="1"
                            Grid.ColumnSpan="2" />

                    <Button Content="Show All Initial Accepted Boundaries"
                            Command="{Binding ShowInitialBoundariesCommand}"
                            Grid.ColumnSpan="2"
                            Height="20"
                            Margin="1" />

                    <Button Content="Run Skip Counting Analysis"
                            Command="{Binding AnalyzeSkipCountingCommand}"
                            Grid.ColumnSpan="2"
                            Height="20"
                            Margin="1" />

                    <Button Content="Run Bottom Skip Counting Analysis"
                            Command="{Binding AnalyzeBottomSkipCountingCommand}"
                            Grid.ColumnSpan="2"
                            Height="20"
                            Margin="1" />

                    <Button Content="Regenerate Tags"
                            Command="{Binding RegenerateTagsCommand}"
                            Grid.ColumnSpan="2"
                            Height="20"
                            Margin="1" />

                    <Rectangle Grid.ColumnSpan="2"
                               Height="1"
                               Margin="1 5"
                               Stroke="{StaticResource GrayBorderColor}" />

                </orc:StackGrid>

                <orc:StackGrid DockPanel.Dock="Top"
                                 Margin="5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.ColumnSpan="2"
                               TextAlignment="Center"
                               FontWeight="Bold">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Page {0}{1} - {2}">
                                <Binding Path="PageNumber" />
                                <Binding Path="DifferentiationLevel"
                                         Converter="{converters:StringToEmptyStringConverter}"
                                         ConverterParameter="0" />
                                <Binding Path="CurrentPage.Owner.DisplayName" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Grid.ColumnSpan="2"
                               TextAlignment="Center">
                        <Run Text="Submitted at:" />
                        <Run Text="{Binding CurrentPage.SubmissionTime, StringFormat=MM/dd/yy HH:mm tt}" />
                    </TextBlock>

                    <TextBlock Text="History Length:" />
                    <TextBox Text="{Binding CurrentPage.History.HistoryLength, Mode=OneWay}"
                             IsReadOnly="True" />

                    <TextBlock Text="History Z-Score:" />
                    <TextBox Text="{Binding StandardDeviationZScore, Mode=OneWay}"
                             IsReadOnly="True" />

                    <TextBlock Text="Min/Max/Avg:" />
                    <TextBox IsReadOnly="True"
                             Text="{Binding FormattedMinMaxAverageHistoryLength, Mode=OneWay}"
                             Background="#66FF8C00" />

                    <orc:StackGrid Grid.ColumnSpan="2">
                        <orc:StackGrid.Style>
                            <Style TargetType="orc:StackGrid">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentPage.PageType, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:PageTypes.Animation}}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </orc:StackGrid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Animation Length:" />
                        <TextBox Text="{Binding CurrentPage.History.AnimationLength, Mode=OneWay}"
                                 IsReadOnly="True" />

                        <TextBlock Text="Animation Z-Score:" />
                        <TextBox Text="{Binding AnimationStandardDeviationZScore, Mode=OneWay}"
                                 IsReadOnly="True" />

                        <TextBlock Text="Min/Max/Avg:" />
                        <TextBox IsReadOnly="True"
                                 Text="{Binding FormattedMinMaxAverageAnimationLength, Mode=OneWay}"
                                 Background="#66FF8C00" />

                    </orc:StackGrid>

                    <Rectangle Grid.ColumnSpan="2"
                               Height="1"
                               Margin="1 5"
                               Stroke="{StaticResource GrayBorderColor}" />

                </orc:StackGrid>

                <Grid DockPanel.Dock="Top"
                      Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <UniformGrid Grid.Column="0"
                                 Columns="3">

                        <ToggleButton IsChecked="{Binding CurrentAnalysisStep, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModel:HistoryAnalysisSteps.Tags}}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Image Source="pack://application:,,,/Resources/Images/Tags128.png"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsEnabled"
                                            Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <TextBlock Text="TAGS"
                                                                   FontWeight="Bold"
                                                                   FontSize="16"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsEnabled"
                                                    Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton
                            IsChecked="{Binding CurrentAnalysisStep, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModel:HistoryAnalysisSteps.SemanticEvents}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Image Source="pack://application:,,,/Resources/Images/Steps512.png"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsEnabled"
                                            Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <TextBlock Text="STEPS"
                                                                   FontWeight="Bold"
                                                                   FontSize="16"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsEnabled"
                                                    Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton
                            IsChecked="{Binding CurrentAnalysisStep, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModel:HistoryAnalysisSteps.HistoryActions}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Image Source="pack://application:,,,/Resources/Images/Hourglass256.png"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsEnabled"
                                            Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <TextBlock Text="HISTORY"
                                                                   FontWeight="Bold"
                                                                   FontSize="16"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsEnabled"
                                                    Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                    </UniformGrid>

                    <ToggleButton x:Name="TagLockToggleButton"
                                  Grid.Column="1"
                                  Width="18"
                                  Height="18"
                                  VerticalAlignment="Top"
                                  HorizontalAlignment="Right"
                                  Margin="5 0"
                                  IsChecked="True">

                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Image Source="pack://application:,,,/Resources/Temp/Unlock.png" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked"
                                             Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Image Source="pack://application:,,,/Resources/Temp/Lock.png"
                                                           Opacity="0.5" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                </Grid>

                <Control HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Margin="5 0">

                    <Control.Resources>

                        <ControlTemplate x:Key="TagsTemplate">
                            <ListBox DataContext="{Binding}"
                                     ItemContainerStyle="{StaticResource ListBoxItemBlankStyle}"
                                     ItemsSource="{Binding SortedTags.View, IsAsync=True}"
                                     SelectionMode="Single"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingStackPanel.CacheLength="2,3"
                                     VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ManipulationBoundaryFeedback="TagsListBox_OnManipulationBoundaryFeedback">

                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GroupItem}">

                                                            <Grid Margin="0 2">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>

                                                                <Border Grid.Row="0"
                                                                        VerticalAlignment="Bottom"
                                                                        Background="Transparent"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="2 2 2 0"
                                                                        Margin="2 2 2 0"
                                                                        Height="10" />

                                                                <Border Grid.Row="0"
                                                                        Background="White"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="1"
                                                                        Margin="10 0 50 0"
                                                                        Height="20">

                                                                    <TextBlock Margin="5 0"
                                                                               FontWeight="Bold"
                                                                               HorizontalAlignment="Left"
                                                                               VerticalAlignment="Center">
                                                                        <Run Text="{Binding Name, Mode=OneWay}" />
                                                                    </TextBlock>

                                                                </Border>

                                                                <Border Grid.Row="1"
                                                                        Background="Transparent"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="2 0 2 2"
                                                                        Margin="2 0 2 2">

                                                                    <ItemsPresenter />

                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListBox.GroupStyle>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="5 2"
                                              Visibility="{Binding IsHiddenTag, Converter={catel:BooleanToCollapsingVisibilityConverter}, ConverterParameter=False}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0"
                                                       Grid.Column="0"
                                                       FontWeight="Bold"
                                                       Text="{Binding FormattedName, Mode=OneWay}" />

                                            <TextBlock Grid.Row="1"
                                                       Grid.Column="0"
                                                       Text="{Binding FormattedValue, Mode=OneWay}" />

                                            <Button Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="1"
                                                    Cursor="Hand"
                                                    Height="25"
                                                    Width="25"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding DataContext.DeleteTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                    CommandParameter="{Binding}"
                                                    Visibility="{Binding IsChecked, ElementName=TagLockToggleButton, Converter={catel:BooleanToCollapsingVisibilityConverter}, ConverterParameter=False}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Ellipse Stroke="Black"
                                                                     StrokeThickness="3"
                                                                     Fill="White"
                                                                     VerticalAlignment="Stretch"
                                                                     HorizontalAlignment="Stretch" />
                                                            <Path Data="M0,0 L1,1 M0,1 L1,0"
                                                                  Stretch="Fill"
                                                                  Margin="5"
                                                                  Stroke="Red"
                                                                  StrokeThickness="3" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </ControlTemplate>

                        <ControlTemplate x:Key="SemanticEventsTemplate">
                            <ListBox DataContext="{Binding}"
                                     ItemsSource="{Binding CurrentPage.History.SemanticEvents}"
                                     SelectedItem="{Binding CurrentPage.History.CurrentSemanticEvent, Mode=OneWay}"
                                     SelectionMode="Single"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingStackPanel.CacheLength="2,3"
                                     VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ManipulationBoundaryFeedback="TagsListBox_OnManipulationBoundaryFeedback">

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsHitTestVisible"
                                                Value="False" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold"
                                                   Text="{Binding CodedValue, Mode=OneWay}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </ControlTemplate>

                        <ControlTemplate x:Key="HistoryActionsTemplate">
                            <ListBox DataContext="{Binding}"
                                     ItemsSource="{Binding CurrentPage.History.CompleteOrderedHistoryActions}"
                                     SelectedItem="{Binding CurrentPage.History.CurrentHistoryAction, Mode=OneWay}"
                                     SelectionMode="Single"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingStackPanel.CacheLength="2,3"
                                     VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ManipulationBoundaryFeedback="TagsListBox_OnManipulationBoundaryFeedback">
                                
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsHitTestVisible"
                                                Value="False" />
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold"
                                                   Text="{Binding CachedFormattedValue, Mode=OneWay}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </ControlTemplate>

                    </Control.Resources>

                    <Control.Style>
                        <Style TargetType="{x:Type Control}">

                            <Style.Triggers>

                                <!-- Show Tags trigger -->
                                <DataTrigger Binding="{Binding CurrentAnalysisStep}"
                                             Value="{x:Static viewModel:HistoryAnalysisSteps.Tags}">
                                    <Setter Property="Template"
                                            Value="{StaticResource TagsTemplate}" />
                                </DataTrigger>

                                <!-- Show SemanticEvents trigger -->
                                <DataTrigger Binding="{Binding CurrentAnalysisStep}"
                                             Value="{x:Static viewModel:HistoryAnalysisSteps.SemanticEvents}">
                                    <Setter Property="Template"
                                            Value="{StaticResource SemanticEventsTemplate}" />
                                </DataTrigger>

                                <!-- Show HistoryActions trigger -->
                                <DataTrigger Binding="{Binding CurrentAnalysisStep}"
                                             Value="{x:Static viewModel:HistoryAnalysisSteps.HistoryActions}">
                                    <Setter Property="Template"
                                            Value="{StaticResource HistoryActionsTemplate}" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </Control.Style>
                </Control>

            </DockPanel>

            <DockPanel LastChildFill="True"
                       Visibility="{Binding MainWindowViewModel.StudentOnlyVisibility, Source={x:Static Application.Current}}">

                <orc:StackGrid DockPanel.Dock="Top"
                                 Margin="5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Button Content="Run Page Analysis"
                            Command="{Binding GenerateSemanticEventsCommand}"
                            Height="40"
                            Margin="1 5"
                            Grid.ColumnSpan="2" />

                    <Button Content="Run Skip Counting Analysis"
                            Command="{Binding AnalyzeSkipCountingWithDebugCommand}"
                            Grid.ColumnSpan="2"
                            Height="40"
                            Margin="1 5" />

                    <Rectangle Grid.ColumnSpan="2"
                               Height="1"
                               Margin="1 5"
                               Stroke="{StaticResource GrayBorderColor}" />

                </orc:StackGrid>

                <orc:StackGrid DockPanel.Dock="Top"
                                 Margin="5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.ColumnSpan="2"
                               TextAlignment="Center"
                               FontWeight="Bold">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Page {0}{1} - {2}">
                                <Binding Path="PageNumber" />
                                <Binding Path="DifferentiationLevel"
                                         Converter="{converters:StringToEmptyStringConverter}"
                                         ConverterParameter="0" />
                                <Binding Path="CurrentPage.Owner.DisplayName" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <Rectangle Grid.ColumnSpan="2"
                               Height="1"
                               Margin="1 5"
                               Stroke="{StaticResource GrayBorderColor}" />

                </orc:StackGrid>

                <Grid DockPanel.Dock="Top"
                      Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <UniformGrid Grid.Column="0"
                                 Columns="2">

                        <ToggleButton IsChecked="{Binding CurrentAnalysisStep, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModel:HistoryAnalysisSteps.Tags}}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Image Source="pack://application:,,,/Resources/Images/Tags128.png"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsEnabled"
                                            Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <TextBlock Text="TAGS"
                                                                   FontWeight="Bold"
                                                                   FontSize="16"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsEnabled"
                                                    Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton
                            IsChecked="{Binding CurrentAnalysisStep, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static viewModel:HistoryAnalysisSteps.HistoryActions}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Image Source="pack://application:,,,/Resources/Images/Hourglass256.png"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsEnabled"
                                            Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <TextBlock Text="HISTORY"
                                                                   FontWeight="Bold"
                                                                   FontSize="16"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="IsEnabled"
                                                    Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                    </UniformGrid>

                </Grid>

                <Control HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Margin="5 0">

                    <Control.Resources>

                        <ControlTemplate x:Key="TagsTemplate">
                            <ListBox DataContext="{Binding}"
                                     ItemContainerStyle="{StaticResource ListBoxItemBlankStyle}"
                                     ItemsSource="{Binding SortedTags.View, IsAsync=True}"
                                     SelectionMode="Single"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingStackPanel.CacheLength="2,3"
                                     VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ManipulationBoundaryFeedback="TagsListBox_OnManipulationBoundaryFeedback">

                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GroupItem}">

                                                            <Grid Margin="0 2">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>

                                                                <Border Grid.Row="0"
                                                                        VerticalAlignment="Bottom"
                                                                        Background="Transparent"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="2 2 2 0"
                                                                        Margin="2 2 2 0"
                                                                        Height="10" />

                                                                <Border Grid.Row="0"
                                                                        Background="White"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="1"
                                                                        Margin="10 0 50 0"
                                                                        Height="20">

                                                                    <TextBlock Margin="5 0"
                                                                               FontWeight="Bold"
                                                                               HorizontalAlignment="Left"
                                                                               VerticalAlignment="Center">
                                                                        <Run Text="{Binding Name, Mode=OneWay}" />
                                                                    </TextBlock>

                                                                </Border>

                                                                <Border Grid.Row="1"
                                                                        Background="Transparent"
                                                                        BorderBrush="Black"
                                                                        BorderThickness="2 0 2 2"
                                                                        Margin="2 0 2 2">

                                                                    <ItemsPresenter />

                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListBox.GroupStyle>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="5 2"
                                              Visibility="{Binding IsHiddenTag, Converter={catel:BooleanToCollapsingVisibilityConverter}, ConverterParameter=False}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0"
                                                       Grid.Column="0"
                                                       FontWeight="Bold"
                                                       Text="{Binding FormattedName, Mode=OneWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <catel:EventToCommand
                                                            Command="{Binding DataContext.EditTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                            CommandParameter="{Binding}"
                                                            PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>

                                            <TextBlock Grid.Row="1"
                                                       Grid.Column="0"
                                                       Text="{Binding FormattedValue, Mode=OneWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <catel:EventToCommand
                                                            Command="{Binding DataContext.EditTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                            CommandParameter="{Binding}"
                                                            PassEventArgsToCommand="False" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>

                                            <Button Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="1"
                                                    Cursor="Hand"
                                                    Height="25"
                                                    Width="25"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding DataContext.DeleteTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                    CommandParameter="{Binding}"
                                                    Visibility="{Binding IsChecked, ElementName=TagLockToggleButton, Converter={catel:BooleanToCollapsingVisibilityConverter}, ConverterParameter=False}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Ellipse Stroke="Black"
                                                                     StrokeThickness="3"
                                                                     Fill="White"
                                                                     VerticalAlignment="Stretch"
                                                                     HorizontalAlignment="Stretch" />
                                                            <Path Data="M0,0 L1,1 M0,1 L1,0"
                                                                  Stretch="Fill"
                                                                  Margin="5"
                                                                  Stroke="Red"
                                                                  StrokeThickness="3" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </ControlTemplate>

                        <ControlTemplate x:Key="HistoryActionsTemplate">
                            <ListBox DataContext="{Binding}"
                                     ItemsSource="{Binding CurrentPage.History.CompleteOrderedHistoryActions}"
                                     SelectionMode="Single"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingStackPanel.CacheLength="2,3"
                                     VirtualizingStackPanel.CacheLengthUnit="Page"
                                     VirtualizingStackPanel.ScrollUnit="Pixel"
                                     ManipulationBoundaryFeedback="TagsListBox_OnManipulationBoundaryFeedback">

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold"
                                                   Text="{Binding CachedFormattedValue, Mode=OneWay}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </ControlTemplate>

                    </Control.Resources>

                    <Control.Style>
                        <Style TargetType="{x:Type Control}">

                            <Style.Triggers>

                                <!-- Show Tags trigger -->
                                <DataTrigger Binding="{Binding CurrentAnalysisStep}"
                                             Value="{x:Static viewModel:HistoryAnalysisSteps.Tags}">
                                    <Setter Property="Template"
                                            Value="{StaticResource TagsTemplate}" />
                                </DataTrigger>

                                <!-- Show HistoryActions trigger -->
                                <DataTrigger Binding="{Binding CurrentAnalysisStep}"
                                             Value="{x:Static viewModel:HistoryAnalysisSteps.HistoryActions}">
                                    <Setter Property="Template"
                                            Value="{StaticResource HistoryActionsTemplate}" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </Control.Style>
                </Control>

            </DockPanel>

        </Grid>

    </Border>

</catel:UserControl>