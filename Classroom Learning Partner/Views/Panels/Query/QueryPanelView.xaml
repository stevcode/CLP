<catel:UserControl x:Class="Classroom_Learning_Partner.Views.QueryPanelView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:catel="http://schemas.catelproject.com"
                   xmlns:converters="clr-namespace:Classroom_Learning_Partner.Converters"
                   xmlns:views="clr-namespace:Classroom_Learning_Partner.Views"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:entities="clr-namespace:CLP.Entities;assembly=CLP.Entities"
                   xmlns:viewModels="clr-namespace:Classroom_Learning_Partner.ViewModels"
                   xmlns:system="clr-namespace:System;assembly=mscorlib">

    <catel:UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/BackStageResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Style to override ListBoxItem selection visuals for Pages -->
            <Style x:Key="ListBoxItemBlankStyle"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ObjectDataProvider x:Key="sortTypes"
                                MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="viewModels:GroupTypes" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </catel:UserControl.Resources>

    <Border Background="{StaticResource GrayBackgroundColor}"
            BorderBrush="{StaticResource GrayEdgeColor}"
            BorderThickness="{Binding Location, Converter={converters:PanelLocationToThicknessConverter}, ConverterParameter=7.0}"
            Width="{Binding Length}"
            Visibility="{Binding IsVisible, Converter={catel:BooleanToCollapsingVisibilityConverter}}">

        <Grid>

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Viewing Saved Query -->
                <Grid Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Grid.Row="0"
                      MinHeight="32">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCurrentQuerySaved}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <TextBlock Text="{Binding CurrentCodeQuery.LongFormattedValue}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontWeight="Bold"
                               FontSize="20"
                               Margin="8" />

                </Grid>

                <!-- Creating/Editing Query -->
                <Grid Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Grid.Row="0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCurrentQuerySaved}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0"
                           VerticalAlignment="Center"
                           VerticalContentAlignment="Center"
                           FontWeight="Bold"
                           Content="QUERY:" />

                    <views:QuerySelectorView Grid.Column="1"
                                             DataContext="{Binding CurrentCodeQuery}"
                                             ConditionPlace="First" />

                    <!-- Conditional Manipulation -->
                    <Grid Grid.Column="2">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Conditional, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:QueryConditionals.None}}"
                                        Value="False">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="and..." />

                        <Rectangle Grid.Row="0"
                                   Height="20"
                                   Width="50"
                                   Stroke="Blue"
                                   StrokeThickness="0.5"
                                   RadiusX="5"
                                   RadiusY="5"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Fill="Transparent">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <catel:EventToCommand
                                        Command="{Binding SetANDConditionalCommand}"
                                        PassEventArgsToCommand="False"
                                        CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>

                        <TextBlock Grid.Row="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="or..." />

                        <Rectangle Grid.Row="1"
                                   Height="20"
                                   Width="50"
                                   Stroke="Blue"
                                   StrokeThickness="0.5"
                                   RadiusX="5"
                                   RadiusY="5"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Fill="Transparent">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <catel:EventToCommand
                                        Command="{Binding SetORConditionalCommand}"
                                        PassEventArgsToCommand="False"
                                        CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>

                    </Grid>

                    <Grid Grid.Column="2"
                          Width="40">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Conditional, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:QueryConditionals.And}}"
                                        Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="18"
                                   Text="and" />

                    </Grid>

                    <Grid Grid.Column="2"
                          Width="40">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Conditional, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:QueryConditionals.Or}}"
                                        Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="18"
                                   Text="or" />

                    </Grid>

                    <views:QuerySelectorView Grid.Column="3"
                                             HorizontalAlignment="Stretch"
                                             DataContext="{Binding CurrentCodeQuery}"
                                             ConditionPlace="Second">
                        <views:QuerySelectorView.Style>
                            <Style TargetType="{x:Type views:QuerySelectorView}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Conditional, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:QueryConditionals.None}}"
                                        Value="True">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </views:QuerySelectorView.Style>

                    </views:QuerySelectorView>

                    <Border Grid.Column="4"
                            Background="{StaticResource GrayBackgroundColor}"
                            BorderBrush="Red"
                            BorderThickness="3"
                            CornerRadius="5"
                            Margin="-8 5 5 5">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Conditional, Converter={converters:EnumToBoolConverter}, ConverterParameter={x:Static entities:QueryConditionals.None}}"
                                        Value="True">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid Background="Transparent"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              MinHeight="32"
                              Width="20">

                            <TextBlock Text="X"
                                       Foreground="Red"
                                       FontSize="20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />

                            <Rectangle StrokeThickness="0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Fill="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <catel:EventToCommand
                                            Command="{Binding SetNONEConditionalCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Rectangle>

                        </Grid>
                    </Border>

                </Grid>

                <!-- Save/New/Run Query Buttons -->
                <Grid Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Grid.Row="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"
                            HorizontalAlignment="Center"
                            Height="32"
                            Width="125"
                            Content="Save Query"
                            Command="{Binding SaveQueryCommand}" />

                    <Button Grid.Column="1"
                            HorizontalAlignment="Center"
                            Height="32"
                            Width="125"
                            Content="New Query"
                            Command="{Binding NewQueryCommand}" />

                    <Button Grid.Column="2"
                            HorizontalAlignment="Center"
                            Height="32"
                            Width="125"
                            Content="Run Query"
                            Command="{Binding RunQueryCommand}" />

                </Grid>

                <!-- Horizontal Dividing Line -->
                <Rectangle Grid.Column="0"
                           Grid.ColumnSpan="3"
                           Grid.Row="2"
                           Height="1"
                           Margin="1 5"
                           Stroke="{StaticResource GrayBorderColor}" />

                <!-- Saved Queries List -->
                <ListBox Grid.Column="0"
                         Grid.Row="3"
                         ItemsSource="{Binding SavedQueries.SavedQueries}"
                         SelectedItem="{Binding CurrentCodeQuery, Mode=OneWay}"
                         SelectionMode="Single"
                         ItemContainerStyle="{StaticResource BlankListBoxContainerStyle}"
                         Margin="5 0"
                         ManipulationBoundaryFeedback="PagesListBox_OnManipulationBoundaryFeedback">

                    <ListBox.ItemTemplate>
                        <DataTemplate>

                            <!-- Control Layout -->
                            <Grid Name="LayoutGrid"
                                  HorizontalAlignment="Stretch"
                                  Height="42">

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                Value="True">
                                                <Setter Property="Background"
                                                        Value="{Binding Source={StaticResource DynamicMainColor}, Converter={StaticResource ColorConverter}, ConverterParameter='1.5'}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <!-- Button Content -->
                                <TextBlock Text="{Binding LongFormattedValue}"
                                           Style="{StaticResource BackStageListItemTextBlock}"
                                           Margin="5" />

                                <Rectangle
                                    Stroke="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={converters:ItemSelectedToColorConverter}}"
                                    StrokeThickness="0"
                                    HorizontalAlignment="Stretch"
                                    Fill="Transparent">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <catel:EventToCommand
                                                Command="{Binding DataContext.SelectSavedQueryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                                PassEventArgsToCommand="False"
                                                CommandParameter="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Rectangle>

                                <Button Height="25"
                                        Width="25"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.EditSavedQueryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                        CommandParameter="{Binding}"
                                        Margin="35 0">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Image
                                                    Source="pack://application:,,,/Resources/Images/GreyPencil128.png"
                                                    Height="16"
                                                    Width="16" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>

                                <Button Height="25"
                                        Width="25"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.DeleteSavedQueryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                        CommandParameter="{Binding}"
                                        Margin="5 0">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Ellipse Stroke="Black"
                                                         StrokeThickness="3"
                                                         Fill="White"
                                                         VerticalAlignment="Stretch"
                                                         HorizontalAlignment="Stretch" />
                                                <Path Data="M0,0 L1,1 M0,1 L1,0"
                                                      Stretch="Fill"
                                                      Margin="5"
                                                      Stroke="Red"
                                                      StrokeThickness="3" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>

                            </Grid>

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>

                <!-- Vertical Dividing Line -->
                <Rectangle Grid.Column="1"
                           Grid.Row="3"
                           Width="1"
                           Margin="5 1"
                           Stroke="{StaticResource GrayBorderColor}" />

                <!-- Query Results List -->
                <Grid Grid.Column="2"
                      Grid.Row="3">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0"
                          Margin="5,15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0">View By:</Label>

                        <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding Source={StaticResource sortTypes}}"
                                  SelectedItem="{Binding CurrentGroupType, Mode=TwoWay}"
                                  VerticalContentAlignment="Center">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="FontSize"
                                            Value="18" />
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                    </Grid>

                    <ListBox Grid.Row="1"
                             ItemContainerStyle="{StaticResource ListBoxItemBlankStyle}"
                             ItemsSource="{Binding GroupedQueryResults.View, IsAsync=True}"
                             SelectedValue="{Binding SelectedQueryResult, Mode=OneWay}"
                             SelectionMode="Single"
                             Margin="5 0"
                             ManipulationBoundaryFeedback="PagesListBox_OnManipulationBoundaryFeedback">

                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">

                                                    <Grid Margin="0 2">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>

                                                        <Border Grid.Row="0"
                                                            VerticalAlignment="Bottom"
                                                            Background="Transparent"
                                                            BorderBrush="Black"
                                                            BorderThickness="2 2 2 0"
                                                            Margin="0 0 2 0"
                                                            Height="10"
                                                            Visibility="{Binding IsChecked, ElementName=GroupVisibilityToggle, Converter={catel:BooleanToCollapsingVisibilityConverter}}" />

                                                        <ToggleButton Grid.Row="0"
                                                                  x:Name="GroupVisibilityToggle"
                                                                  Margin="10 0 100 0"
                                                                  Height="20"
                                                                  MinWidth="75">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="ToggleButton">
                                                                    <Setter Property="IsChecked"
                                                                        Value="False" />
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <TextBlock Margin="5 0"
                                                                       FontWeight="Bold"
                                                                       HorizontalAlignment="Left">
                                                                <!--<Run Text="{Binding DataContext.CurrentGroupType, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
                                                                <Run Text=": " />-->
                                                                <Run Text="{Binding Name, Mode=OneWay}" />
                                                                <Run Text=" (" />
                                                                <Run Text="{Binding ItemCount, Mode=OneWay}" />
                                                                <Run Text=")" />
                                                            </TextBlock>
                                                        </ToggleButton>

                                                        <Border Grid.Row="1"
                                                            Background="Transparent"
                                                            BorderBrush="Black"
                                                            BorderThickness="2 0 2 2"
                                                            Margin="0 0 2 2"
                                                            Visibility="{Binding IsChecked, ElementName=GroupVisibilityToggle, Converter={catel:BooleanToCollapsingVisibilityConverter}}">

                                                            <ItemsPresenter
                                                            Visibility="{Binding IsChecked, ElementName=GroupVisibilityToggle, Converter={catel:BooleanToCollapsingVisibilityConverter}}" />

                                                        </Border>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListBox.GroupStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch"
                                      Margin="5">

                                    <TextBlock Text="{Binding FormattedValue}"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch" />

                                    <Rectangle
                                        Stroke="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={converters:ItemSelectedToColorConverter}}"
                                        StrokeThickness="0"
                                        HorizontalAlignment="Stretch"
                                        Fill="Transparent">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseUp">
                                                <catel:EventToCommand
                                                    Command="{Binding DataContext.SetCurrentPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                                    PassEventArgsToCommand="False"
                                                    CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Rectangle>

                                </Grid>

                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>

                </Grid>

            </Grid>

            <!-- Resizes Panel -->
            <Thumb Cursor="ScrollWE"
                   Width="7"
                   Margin="0 0 -7 0"
                   VerticalAlignment="Stretch"
                   HorizontalAlignment="Right">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragDelta">
                        <catel:EventToCommand Command="{Binding PanelResizeDragCommand}"
                                              PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Thumb.Template>
                    <ControlTemplate>
                        <Grid VerticalAlignment="Stretch" Background="Transparent">
                            <UniformGrid Columns="1"
                                         Height="30"
                                         Background="Transparent">
                                <Ellipse StrokeThickness="0"
                                         Fill="{StaticResource HighlightColor}"
                                         Height="3"
                                         Width="3" />
                                <Ellipse StrokeThickness="0"
                                         Fill="{StaticResource HighlightColor}"
                                         Height="3"
                                         Width="3" />
                                <Ellipse StrokeThickness="0"
                                         Fill="{StaticResource HighlightColor}"
                                         Height="3"
                                         Width="3" />
                            </UniformGrid>
                        </Grid>
                    </ControlTemplate>
                </Thumb.Template>
            </Thumb>

        </Grid>

    </Border>

</catel:UserControl>